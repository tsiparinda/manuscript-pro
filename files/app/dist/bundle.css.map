{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "BlockEditor.svelte",
    "BlockEditor_self.svelte",
    "FormLine.svelte",
    "ImageEditor.svelte",
    "LineEditor.svelte",
    "Message.svelte",
    "MetadataEditor.svelte",
    "Modal.svelte",
    "Objects.svelte",
    "ResizeBarLanscape.svelte",
    "ResizeBarPortrait.svelte",
    "TextAheadOverlay.svelte",
    "TextInput.svelte",
    "AddCollection.svelte",
    "CollectionBulkEdit.svelte",
    "CollectionOverview.svelte",
    "IngestCex.svelte",
    "IngestImage.svelte",
    "ShareCollection.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let passagetext\n  export let transcriptionFontSize\n\n  import { createEventDispatcher } from 'svelte'\n\n  // function autoResize(textarea) {\n  //   textarea.style.height = 'auto'\n  //   textarea.style.height = textarea.scrollHeight + 'px'\n  //   console.log('!!!!', textarea.scrollHeight)\n  // }\n  // on:input={autoResize(this)}\n\n  const dispatch = createEventDispatcher()\n\n  function updateValue(event) {\n    const newpassagetext = event.target.value\n    dispatch('update', newpassagetext)\n  }\n\n</script>\n\n<style>\n  .container {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  textarea {\n    height: 100%;\n    width: 100%;\n    resize: none;\n    box-sizing: border-box;\n  }\n\n</style>\n\n<div class=\"container\">\n  <textarea\n    class=\"specialKey\"\n    rows=\"15\"\n    name=\"transcription\"\n    style=\"font-size: {transcriptionFontSize};\"\n    bind:value={passagetext}\n    on:change={updateValue} />\n</div>\n<!-- \n<input class=\"specialKey\" name=\"transcription\" style=\"margin-left: 25px;  webkit-line-break:\nnormal; width: 98%; \"> -->\n",
    "<script>\n  import { onMount } from 'svelte'\n  import { isElementInViewport } from '../lib/utils.js' // Import the isElementInViewport function from a utils.js file\n  import Modal from './Modal.svelte'\n\n  export let id_col, bucket, citation\n  let err,\n    passagetext = 'Loading transcription...',\n    passage,\n    textarea,\n    dataloaded = false,\n    isVisible = false\n\n  let isLoading = true\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  $: textareaRows = countRows(passagetext)\n  $: urn = bucket + citation\n  $: if (!!textarea) {\n    textarea.disabled = !isVisible || !dataloaded\n  }\n  // $: console.log('!!!!!!!!!!!!!!', id_col, bucket, citation)\n\n  async function getPassage(id_col, urn) {\n    const res = await fetch(`/api/v1/passage/${id_col}/${urn}`)\n    if (res.ok) {\n      const d = await res.json()\n      passagetext = d.data.transcriptionLines.join('\\r\\n')\n      dataloaded = true\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function SaveBlockEditorTrancription() {\n    //console.log('passagetext: ', passagetext)\n    isLoading = true\n    let data = {\n      colid: parseInt(id_col),\n      passageid: urn,\n      text: passagetext,\n    }\n    // console.log('passagetext: ', data)\n\n    const res = await fetch('/api/v2/savepassagetext', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    })\n    // .then((res) => {\n    //   console.log('Request complete! response:', res)\n    //   if (!textarea.disabled) {\n    //     getPassage(id_col, urn)\n    //   }\n    //   isLoading = false\n    //   // location.reload(true)\n    // })\n\n    if (res.ok) {\n      modalHeader = 'Success'\n      modalText = 'Witness saved'\n      showModal = true\n      // showMetadata = false\n    } else {\n      // Handle error\n      console.error(`Ingestion failed: HTTP ${res.status} ${await res.text()}`)\n      modalHeader = 'Error'\n      modalText = 'An error occurred in the save transcription process.'\n      showModal = true\n      return\n    }\n    if (!textarea.disabled) {\n      getPassage(id_col, urn)\n    }\n    isLoading = false\n  }\n\n  function countRows(text) {\n    if (!text) {\n      return 1\n    }\n    return text.split(/\\n/).length\n  }\n\n  onMount(() => {\n    updateTextareaState()\n    window.addEventListener('scroll', updateTextareaState)\n    window.addEventListener('resize', updateTextareaState)\n    //getPassage(id_col, urn)\n  })\n\n  function updateTextareaState() {\n    if (textarea) {\n      isVisible = isElementInViewport(textarea)\n      if (isVisible && !dataloaded) {\n        getPassage(id_col, urn)\n      }\n    }\n  }\n\n</script>\n\n<style>\n  textarea.loading {\n    cursor: progress;\n  }\n\n  textarea {\n    overflow: hidden;\n    white-space: pre;\n    resize: none;\n    width: 98%;\n  }\n\n</style>\n\n<textarea\n  bind:this={textarea}\n  class=\"dynamicTextarea specialKey {isLoading ? 'loading' : ''}\"\n  rows={textareaRows}\n  name=\"transcription\"\n  bind:value={passagetext}\n  on:change={SaveBlockEditorTrancription} />\n\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  export let id = ''\n  export let label = ''\n  export let offset = false\n  export let info = ''\n\n</script>\n\n<style>\n  .offset {\n    margin-top: 25px;\n  }\n\n  .label-wrapper {\n    display: flex;\n    align-items: flex-start; /* Aligns label to the top */\n  }\n\n  .line-label {\n    margin-right: 10px;\n  }\n\n  [data-title]:hover:after {\n    opacity: 1;\n    transition: all 0.1s ease 0.5s;\n    visibility: visible;\n  }\n  [data-title]:after {\n    content: attr(data-title);\n    position: absolute;\n    bottom: -1.6em;\n    left: 100%;\n    padding: 4px 4px 4px 8px;\n    color: #222;\n    white-space: nowrap;\n    -moz-border-radius: 5px;\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n    -moz-box-shadow: 0px 0px 4px #222;\n    -webkit-box-shadow: 0px 0px 4px #222;\n    box-shadow: 0px 0px 4px #222;\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -webkit-gradient(\n      linear,\n      left top,\n      left bottom,\n      color-stop(0, #f8f8f8),\n      color-stop(1, #cccccc)\n    );\n    background-image: -webkit-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -ms-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -o-linear-gradient(top, #f8f8f8, #cccccc);\n    opacity: 0;\n    z-index: 99999;\n    visibility: hidden;\n  }\n  [data-title] {\n    position: relative;\n  }\n\n</style>\n\n<div class=\"field is-horizontal\" class:offset>\n  <div class=\"field-label is-normal label-wrapper\">\n    {#if label}\n      <label class=\"label offset line-label\" for={id}>{label}\n        {#if info}<i class=\"fa fa-question-circle-o\" data-title={info} />{/if}\n      </label>\n    {:else}\n      <div class=\"line-label\" />\n    {/if}\n  </div>\n  <div class=\"field-body\">\n    <div class=\"field\">\n      <div class=\"control\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</div>\n",
    "<!-- ImageReference.svelte -->\n<script>\n  import { onMount } from 'svelte'\n  import { createEventDispatcher } from 'svelte'\n  import { writable } from 'svelte/store'\n  import Modal from './Modal.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  export let passage, colID, savedata\n\n  let ctsurn // Replace with the value from your original code\n  // let imageRef = '' // Replace with the value from your original code\n  // let imageJS = '' // Replace with the value from your original code\n  let selectedCollection = '',\n    selectedImage = writable(null),\n    collections = [],\n    s3collections = [],\n    imagenames = [],\n    locations = [],\n    colnames = [],\n    imageURL,\n    imageRefs = [],\n    activeTab = 'local'\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  let isLoading = false\n\n  function addImageToCollection() {\n    if (selectedImage && !imageRefs.includes(selectedImage)) {\n      imageRefs = [...imageRefs, selectedImage]\n    }\n  }\n\n  function removeImageFromCollection(imageName) {\n    imageRefs = imageRefs.filter((image) => image !== imageName)\n  }\n\n  onMount(async () => {\n    imageRefs = [...passage.imageRefs]\n    ctsurn = passage.passageid\n    populateCollectionDropdown()\n    populateS3CollectionDropdown()\n  })\n\n  $: handleSubmit(savedata)\n\n  $: if (!!collections) {\n    collections.forEach((entry) => {\n      const option = document.createElement('option')\n      option.value = entry.colname\n      option.text = entry.colname\n    })\n\n    imagenames = collections.map((entry) => entry.imagename)\n    locations = collections.map((entry) => entry.location)\n\n    colnames = collections\n      .map((entry) => entry.colname)\n      .filter((value, index, self) => self.indexOf(value) === index)\n  }\n\n  $: filteredImagenames = collections\n    .filter((entry) => entry.colname === selectedCollection)\n    .map((entry) => entry.imagename)\n    .filter((imagename) => !imageRefs.includes(imagename))\n\n  $: filteredLocalImagenames = s3collections.filter(\n    (entry) => !imageRefs.includes(entry)\n  )\n  //  .map((entry) => entry)\n  //  .filter(( ) => !imageRefs.includes( entry))\n\n  async function populateCollectionDropdown() {\n    const collectionurl = `/api/v1/collectionimages/${colID}`\n    const res = await fetch(collectionurl)\n    if (res.ok) {\n      collections = (await res.json()).data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function populateS3CollectionDropdown() {\n    const collectionurl = `/api/v1/localimages`\n    const res = await fetch(collectionurl)\n    if (res.ok) {\n      s3collections = (await res.json()).data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  function handleImageChange(event) {\n    const selectedIndex = imagenames.indexOf(selectedImage)\n\n    if (selectedIndex !== -1) {\n      imageURL = locations[selectedIndex]\n      // console.log('Selected imageURL:', imageURL)\n\n      // Emit the custom event with the new imageURL\n      dispatch('imageurlchange', { imageURL })\n    } else {\n      console.log('Image not found in the imagenames array')\n    }\n  }\n\n  async function handleSubmit() {\n    if (!savedata) return\n\n    isLoading = true // Set isLoading to true before making the request\n\n    const id = colID\n    // const imageref = imageRefs.replaceAll('#', '+')\n    const formData = {\n      colid: parseInt(id),\n      ctsurn: ctsurn,\n      imageref: imageRefs,\n    }\n\n    const response = await fetch('/api/v2/savereference', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n\n    isLoading = false // Set isLoading back to false after the request is complete\n\n    if (response.ok) {\n      // Handle successful POST action\n      modalHeader = 'Success'\n      modalText = 'Image references have been saved'\n      showModal = true\n    } else {\n      // Handle error\n      modalHeader = 'Error'\n      modalText = 'Image references have not been saved'\n      showModal = true\n    }\n    savedata = false\n    window.location.href = `/view/${colID}/${passage.passageid}`\n  }\n\n  function selectImage(image) {\n    //selectedImage.set(image); // Set the value of the selectedImage store to the clicked image\n    // console.log('Image ', image, imageRefs)\n    const selectedIndex = imageRefs.indexOf(image)\n\n    if (selectedIndex !== -1) {\n      imageURL = imageRefs[selectedIndex]\n      // console.log('Selected imageURL:', imageURL)\n    } else {\n      console.log('Image not found in the imagenames array')\n    }\n    dispatch('imageurlchange', { imageURL })\n  }\n\n</script>\n\n<style>\n  .tab-content {\n    min-height: 150px; /* Adjust the height as needed */\n    overflow-y: auto; /* Enable vertical scrolling if content exceeds the height */\n  }\n  .tabs ul {\n    display: flex;\n    flex-direction: row;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  /* Tab navigation styles */\n  .tabs {\n    border-bottom: 1px solid #ccc; /* Add a line to separate the navigation from the content */\n    font-family: 'Arial', sans-serif; /* Change the font of the tab names */\n    margin-bottom: 1rem;\n  }\n\n  .tabs li {\n    margin-right: 1rem;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    border: 1px solid transparent;\n    border-radius: 4px 4px 0 0;\n  }\n\n  /* Active tab styles */\n  .tabs li.is-active {\n    font-weight: bold; /* Make the font of the active tab name bold */\n    border-color: #ccc;\n    border-bottom-color: transparent;\n    background-color: #f9f9f9;\n  }\n\n  li {\n    margin-bottom: 5px; /* Adjust this value as needed */\n  }\n  .image-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .delete-button {\n    margin-left: 20px; /* Adjust this value as needed */\n  }\n\n  .select-container {\n    width: 100%;\n  }\n  select {\n    width: 100%;\n  }\n\n</style>\n\n<div\n  class=\"container is-fluid\"\n  style=\"cursor: {isLoading ? 'progress' : 'default'}\">\n  <section>\n    <div class=\"tile is-ancestor\">\n      <div class=\"tile is-parent\">\n        <div class=\"tile is-vertical\">\n          <div class=\"tile is-child\">\n            <!-- Add tab navigation -->\n            <div class=\"tabs\">\n              <ul>\n                <!-- svelte-ignore a11y-click-events-have-key-events -->\n                <li\n                  class:is-active={activeTab === 'local'}\n                  on:click={() => (activeTab = 'local')}>\n                  <!-- svelte-ignore a11y-missing-attribute -->\n                  <a>External Images</a>\n                </li>\n                <!-- svelte-ignore a11y-click-events-have-key-events -->\n                <li\n                  class:is-active={activeTab === 's3'}\n                  on:click={() => (activeTab = 's3')}>\n                  <!-- svelte-ignore a11y-missing-attribute -->\n                  <a>Internal Images</a>\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"tab-content\">\n              <!-- Local Images Tab -->\n              {#if activeTab === 'local'}\n                <div class=\"form-group\">\n                  <label for=\"sel1\">Select Collection:</label>\n                  <select\n                    bind:value={selectedCollection}\n                    class=\"form-control\"\n                    id=\"image_colSelect\">\n                    <option disabled>Choose collection</option>\n                    {#if !!collections}\n                      {#each colnames as col}\n                        <option value={col}>{col}</option>\n                      {/each}\n                    {:else}\n                      <option disabled>No collections</option>\n                    {/if}\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"sel1\">Select Image:</label>\n                  <select\n                    bind:value={selectedImage}\n                    class=\"form-control\"\n                    id=\"image_urnSelect\"\n                    on:change={handleImageChange}>\n                    <option disabled>Choose folio</option>\n                    {#each filteredImagenames as imagename}\n                      <option value={imagename}>{imagename}</option>\n                    {/each}\n                  </select>\n                </div>\n              {/if}\n\n              <!-- S3 Bucket Images Tab -->\n              {#if activeTab === 's3'}\n                <div class=\"form-group\">\n                  <select bind:value={selectedImage} class=\"form-control\">\n                    <option value=\"\">-- select an image --</option>\n                    {#each filteredLocalImagenames as image}\n                      <option>{image}</option>\n                    {/each}\n                  </select>\n                </div>\n              {/if}\n              <button\n                class=\"button is-small is-primary\"\n                on:click={addImageToCollection}>\n                Add\n              </button>\n            </div>\n            <ul>\n              <!-- Display the list of collection images -->\n              {#each imageRefs as image}\n                <li>\n                  <!-- svelte-ignore a11y-click-events-have-key-events -->\n                  <div\n                    class=\"image-item\"\n                    on:click={(event) => {\n                      event.stopPropagation()\n                      selectImage(image)\n                    }}>\n                    {image}\n                    <button\n                      class=\"btn btn-primary  delete-button\"\n                      on:click={(event) => {\n                        event.stopPropagation() // Prevent the li click event from triggering\n                        removeImageFromCollection(image)\n                      }}>\n                      DEL\n                    </button>\n                  </div>\n                </li>\n              {/each}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  export let lineIndex\n  export let transcriptionEditNav\n  export let currentTranscriptionLines = []\n  export let isLineEditor\n  export let transcriptionFontSize\n\n  $: transcriptionLineNumbers = updateLineNumber(currentTranscriptionLines)\n\n  $: if (isLineEditor) {\n    transcriptionEditNav = true\n  } else {\n    transcriptionEditNav = false\n  }\n\n  // $: console.log(\n  //   'Selected line index:',\n  //   lineIndex,\n  //   currentTranscriptionLines.length,\n  //   currentTranscriptionLines,\n  //   isLineEditor\n  // )\n\n  function handleEditorAddLineBeforeClick() {\n    currentTranscriptionLines.splice(lineIndex, 0, '#')\n    currentTranscriptionLines = [...currentTranscriptionLines]\n    console.log(\n      '!handleEditorAddLineBeforeClick',\n      lineIndex,\n      currentTranscriptionLines\n    )\n  }\n\n  function handleEditorAddLineAfterClick() {\n    currentTranscriptionLines.splice(parseInt(lineIndex) + 1, 0, '#')\n    currentTranscriptionLines = [...currentTranscriptionLines]\n    lineIndex = parseInt(lineIndex) + 1\n    console.log(\n      '!handleEditorAddLineAfterClick',\n      lineIndex,\n      currentTranscriptionLines\n    )\n  }\n\n  function handleEditorDelLineClick() {\n    currentTranscriptionLines.splice(lineIndex, 1)\n    currentTranscriptionLines = [...currentTranscriptionLines]\n    //  passage.transcriptionlines = currentTranscriptionLines.map((obj) => obj.line)\n  }\n\n  function updateLineNumber(strarray) {\n    let count = 0\n    let lineNumbers = []\n    strarray.forEach((line, index) => {\n      let val = getNumeralBeforeClosingBrace(line)\n      if (val > 0) {\n        count = val\n      } else if (val === null) {\n        count = count + 1\n      } else {\n        count = 1\n      }\n      lineNumbers.push(count)\n    })\n    // console.log('!!!!', lineNumbers)\n    return lineNumbers\n  }\n\n  function getNumeralBeforeClosingBrace(code) {\n    const closingBraceIndex = code.indexOf('}')\n    if (closingBraceIndex === -1 || closingBraceIndex === 0) {\n      return null\n    } else {\n      let numeral = ''\n      let i = closingBraceIndex - 1\n      while (i >= 0 && /[0-9]/.test(code.charAt(i))) {\n        numeral = code.charAt(i) + numeral\n        i--\n      }\n      return numeral === '' ? null : parseInt(numeral, 10)\n    }\n  }\n\n</script>\n\n<style>\n  .toolbar_editor {\n    align-items: center;\n    height: 40px;\n    margin: 0;\n    margin-left: 20px;\n    list-style: none;\n    padding: 0;\n  }\n\n  .btn_toolbar {\n    background: #147cb4;\n    border-radius: 20px;\n    border: 1px solid #ffffff;\n    font-family: 'Montserrat';\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 13px;\n    text-align: center;\n    color: #ffffff;\n  }\n\n  .btn_toolbar:hover {\n    background: #1ca6f1;\n    color: #ffffff;\n  }\n\n  .btn_toolbar:active {\n    background: #0e5981;\n    color: #ffffff;\n  }\n\n  a.tip {\n    border-bottom: 1px dashed;\n    text-decoration: none;\n  }\n  a.tip:hover {\n    cursor: context-menu;\n    position: relative;\n    transition: ease 1s;\n  }\n  a.tip span {\n    display: none;\n  }\n  a.tip:hover span {\n    border: #fbb7b7 1px;\n    opacity: 0.9;\n    border-radius: 20px;\n    padding: 5px 20px 5px 5px;\n    display: inline-block;\n    z-index: 100;\n    background: url(../images/status-info.png) #fff1a0 no-repeat 100% 5%;\n    left: 0px;\n    margin: 10px;\n    width: 150px;\n    position: absolute;\n    top: 20px;\n    text-decoration: none;\n    color: #020202;\n    font-style: italic;\n    word-wrap: break-word;\n    white-space: break-spaces;\n    line-height: 1.5;\n  }\n\n  [data-title]:hover:after {\n    opacity: 1;\n    transition: all 0.1s ease 0.5s;\n    visibility: visible;\n  }\n  [data-title]:after {\n    content: attr(data-title);\n    position: absolute;\n    bottom: -1.6em;\n    left: 100%;\n    padding: 4px 4px 4px 8px;\n    color: #222;\n    white-space: nowrap;\n    -moz-border-radius: 5px;\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n    -moz-box-shadow: 0px 0px 4px #222;\n    -webkit-box-shadow: 0px 0px 4px #222;\n    box-shadow: 0px 0px 4px #222;\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -webkit-gradient(\n      linear,\n      left top,\n      left bottom,\n      color-stop(0, #f8f8f8),\n      color-stop(1, #cccccc)\n    );\n    background-image: -webkit-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -ms-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -o-linear-gradient(top, #f8f8f8, #cccccc);\n    opacity: 0;\n    z-index: 99999;\n    visibility: hidden;\n  }\n  [data-title] {\n    position: relative;\n  }\n\n</style>\n\n<div class=\"transcription\" style=\"font-size: {transcriptionFontSize};\">\n  {#each currentTranscriptionLines as line, i}\n    {#if transcriptionEditNav && lineIndex == i}\n      <div class=\"row toolbar_editor\">\n        <a\n          class=\"btn btn_toolbar tip my-2 my-sm-0\"\n          data-title=\"This button will insert one line above\"\n          href=\"#top\"\n          on:click={handleEditorAddLineBeforeClick}>\n          Add\n          <i class=\"fa fa-level-up fa-lg\" />\n          <!-- <span>This button will insert one line above</span> -->\n        </a>\n        <a\n          class=\"btn btn_toolbar tip my-2 my-sm-0\"\n          data-title=\"This button will insert one line below\"\n          href=\"#top\"\n          on:click={handleEditorAddLineAfterClick}>\n          Add\n          <i class=\"fa fa-level-down fa-lg\" />\n          <!-- <span>This button will insert one line below</span> -->\n        </a>\n        <a\n          class=\"btn btn_toolbar tip my-2 my-sm-0\"\n          data-title=\"This button will delete the current line\"\n          href=\"#top\"\n          on:click={handleEditorDelLineClick}>\n          Del\n          <i class=\"fa fa-remove fa-lg\" />\n          <!-- <span>This button will delete the current line</span> -->\n        </a>\n      </div>\n    {/if}\n    <div>\n      <span class=\"font-weight-bold\" style=\"display: table-cell; width: 40px;\">\n        {transcriptionLineNumbers[i]}:\n      </span>\n      <span\n        style=\"margin-left: 25px; display: table-cell; webkit-line-break:\n        normal;\"\n        contenteditable={`${isLineEditor ? true : false}`}\n        data-index={i}>\n        {line}\n      </span>\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import growAndFade from '../transitions/growAndFade'\n\n  export let text = ''\n  export let error = false\n</script>\n\n<style>\n  em {\n    display: inline-block;\n    padding: 5px;\n\n    font-style: normal;\n    font-size: 90%;\n    font-weight: 500;\n  }\n\n  .error {\n    color: rgb(200, 10, 10);\n  }\n</style>\n\n<div transition:growAndFade>\n  <em class:error>{text}</em>\n</div>\n",
    "<script>\n  import { onMount } from 'svelte'\n  import Message from '../components/Message.svelte'\n  import Modal from './Modal.svelte'\n\n  export let passage,\n    savedata,\n    canEditMetadata = false\n\n  let formData = {\n    urn: '',\n    citationScheme: '',\n    groupName: '',\n    workTitle: '',\n    versionLabel: '',\n    exemplarLabel: '',\n    online: '',\n    language: '',\n  }\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  onMount(() => {\n    formData = { ...passage.catalog }\n  })\n\n  $: handleSubmit(savedata)\n\n  async function handleSubmit() {\n    if (!savedata) return\n    // formData.colid= parseInt(id_col)\n    // console.log('!!!!!', JSON.stringify(formData))\n    const response = await fetch('/api/v2/savemetadata', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n\n    if (response.ok) {\n      // Handle successful POST action\n      passage.catalog = { ...formData }\n\n      modalHeader = 'Success'\n      modalText = 'Metadata saved'\n      showModal = true\n      // showMetadata = false\n    } else {\n      // Handle error\n      modalHeader = 'Error'\n      modalText = 'Metadata not saved'\n      showModal = true\n    }\n    savedata = false\n  }\n\n</script>\n\n<style>\n  [data-title]:hover:after {\n    opacity: 1;\n    transition: all 0.1s ease 0.5s;\n    visibility: visible;\n  }\n  [data-title]:after {\n    content: attr(data-title);\n    position: absolute;\n    bottom: -1.6em;\n    left: 100%;\n    padding: 4px 4px 4px 8px;\n    color: #222;\n    white-space: nowrap;\n    -moz-border-radius: 5px;\n    -webkit-border-radius: 5px;\n    border-radius: 5px;\n    -moz-box-shadow: 0px 0px 4px #222;\n    -webkit-box-shadow: 0px 0px 4px #222;\n    box-shadow: 0px 0px 4px #222;\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -webkit-gradient(\n      linear,\n      left top,\n      left bottom,\n      color-stop(0, #f8f8f8),\n      color-stop(1, #cccccc)\n    );\n    background-image: -webkit-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -moz-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -ms-linear-gradient(top, #f8f8f8, #cccccc);\n    background-image: -o-linear-gradient(top, #f8f8f8, #cccccc);\n    opacity: 0;\n    z-index: 99999;\n    visibility: hidden;\n  }\n  [data-title] {\n    position: relative;\n  }\n\n</style>\n\n<form on:submit|preventDefault={handleSubmit}>\n  <dl>\n    <dt>\n      Work URN\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"This field is non-editable\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.urn}\n        readonly />\n    </dd>\n    <dt>\n      Scheme\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Citation scheme of the work for example, 'a.b.c' could resemble 'adhyāya / āhnika / sūtra'\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.citationScheme}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Workgroup\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Workgroup in natural language\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.groupName}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Title\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Title in natural language\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.workTitle}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Version\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Version in natural language\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.versionLabel}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Exemplar\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Exemplar in natural language\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.exemplarLabel}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Online\n      <i\n        class=\"fa fa-question-circle-o\"\n        data-title=\"Boolean type; usually 'true' or 'false'\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.online}\n        readonly={!canEditMetadata} />\n    </dd>\n    <dt>\n      Language\n      <i class=\"fa fa-question-circle-o\" data-title=\"Language ID\" />\n    </dt>\n    <dd>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        bind:value={formData.language}\n        readonly={!canEditMetadata} />\n    </dd>\n  </dl>\n  <!-- <button type=\"submit\">Save</button> -->\n</form>\n\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  export let showModal // boolean\n\n  let dialog // HTMLDialogElement\n\n  $: if (dialog && showModal) dialog.showModal()\n</script>\n\n<style>\n  dialog {\n    max-width: 32em;\n    min-width: 24em;\n    border-radius: 0.2em;\n    border: none;\n    padding: 0;\n  }\n  dialog::backdrop {\n    background: rgba(0, 0, 0, 0.3);\n  }\n  dialog > div {\n    padding: 1em;\n  }\n  dialog[open] {\n    animation: zoom 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n  }\n  @keyframes zoom {\n    from {\n      transform: scale(0.95);\n    }\n    to {\n      transform: scale(1);\n    }\n  }\n  dialog[open]::backdrop {\n    animation: fade 0.2s ease-out;\n  }\n  @keyframes fade {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  button {\n    display: block;\n  }\n  .modal-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n</style>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<dialog\n  bind:this={dialog}\n  on:close={() => (showModal = false)}\n  on:click|self={() => dialog.close()}>\n\n  <div on:click|stopPropagation class=\"modal-container\">\n    <slot name=\"header\" />\n    <hr />\n    <slot />\n    <hr />\n    <!-- svelte-ignore a11y-autofocus -->\n    <button autofocus on:click={() => dialog.close()}>OK</button>\n  </div>\n</dialog>\n",
    "<script>\n  export let object\n</script>\n\n<style>\n  li.typeahead-objects {\n    list-style: none;\n    border: 1px solid #d4d4d4;\n    margin: 0;\n    padding: 10px;\n    cursor: pointer;\n    background-color: #fff;\n    display: block;\n  }\n  li.typeahead-objects:hover {\n    background-color: lightgray;\n  }\n</style>\n\n<li class=\"typeahead-objects\" on:mousedown>{object}</li>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  const dispatch = createEventDispatcher()\n  let barElement = undefined,\n    innerOffsetY = null\n  $: resizing = innerOffsetY !== null\n\n  function handleMouseDown(e) {\n    innerOffsetY = e.y\n    document.addEventListener('mousemove', handleMouseMove, false)\n    dispatch('down', {})\n  }\n\n  function handleMouseMove(e) {\n    dispatch('move', {\n      y: e.y - innerOffsetY,\n    })\n  }\n\n  function handleMouseUp() {\n    innerOffsetY = null\n    document.removeEventListener('mousemove', handleMouseMove, false)\n    dispatch('up')\n  }\n\n</script>\n\n<style>\n  .bar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    box-sizing: border-box;\n    width: 100%;\n    height: 12px;\n    padding: 4px;\n\n    background-color: var(--toolbar-bg-color);\n    border-top: 1px solid var(--toolbar-border-color);\n    cursor: ns-resize;\n    transition: background-color 120ms ease-in-out;\n  }\n\n  .bar.active {\n    background-color: rgb(255, 255, 255);\n  }\n\n  .handle {\n    flex-shrink: 0;\n    flex-grow: 0;\n    width: 32px;\n    height: 4px;\n    border-radius: 2px;\n    background-color: rgb(100, 100, 100);\n    transition: background-color 120ms ease-in-out;\n  }\n\n  .bar:hover .handle {\n    background-color: rgb(0, 0, 0);\n  }\n\n  .resizing {\n    cursor: ns-resize;\n  }\n\n</style>\n\n<svelte:window on:mouseup={handleMouseUp} />\n<svelte:body class:resizing />\n\n<div\n  class=\"bar resizing\"\n  bind:this={barElement}\n  on:mousedown={handleMouseDown}\n  class:active={resizing}>\n  <div class=\"handle\" />\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  const dispatch = createEventDispatcher()\n  let barElement = undefined,\n    innerOffsetX = null\n  $: resizing = innerOffsetX !== null\n\n  function handleMouseDown(e) {\n    innerOffsetX = e.x\n    document.addEventListener('mousemove', handleMouseMove, false)\n    dispatch('down', {})\n  }\n\n  function handleMouseMove(e) {\n    // console.log('!!', e.x, innerOffsetX)\n    dispatch('move', {\n      x: e.x - innerOffsetX,\n    })\n  }\n\n  function handleMouseUp() {\n    innerOffsetX = null\n    document.removeEventListener('mousemove', handleMouseMove, false)\n    dispatch('up')\n  }\n\n</script>\n\n<style>\n  .bar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    box-sizing: border-box;\n    width: 12px;\n    height: auto;\n    padding: 4px;\n\n    background-color: var(--toolbar-bg-color);\n    border-left: 1px solid var(--toolbar-border-color);\n    cursor: ew-resize;\n    transition: background-color 120ms ease-in-out;\n  }\n\n  .bar.active {\n    background-color: rgb(255, 255, 255);\n  }\n\n  .handle {\n    flex-shrink: 0;\n    flex-grow: 0;\n    width: 4px;\n    height: 100%;\n    border-radius: 2px;\n    background-color: rgb(100, 100, 100);\n    transition: background-color 120ms ease-in-out;\n  }\n\n  .bar:hover .handle {\n    background-color: rgb(0, 0, 0);\n  }\n\n  .resizing {\n    cursor: ew-resize;\n  }\n\n</style>\n\n<svelte:window on:mouseup={handleMouseUp} />\n<svelte:body class:resizing />\n\n<div\n  class=\"bar resizing\"\n  bind:this={barElement}\n  on:mousedown={handleMouseDown}\n  class:active={resizing}>\n  <div class=\"handle\" />\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import { fade, fly } from 'svelte/transition'\n  import { quintOut } from 'svelte/easing'\n\n  export let items\n  export let selectedIndex\n\n  const dispatch = createEventDispatcher()\n\n  function handleClose(index) {\n    dispatch('close', index)\n  }\n\n  function handleMouseMove(index) {\n    dispatch('select', index)\n  }\n\n  function handleKeyDown(event, index) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      // Trigger the handleClick function when the \"Enter\" or \"Space\" key is pressed\n      handleClick(index)\n    }\n  }\n</script>\n\n<style>\n  .search-container {\n    position: relative;\n  }\n\n  .search {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 50;\n\n    padding: 3px;\n  }\n\n  .item {\n    box-sizing: border-box;\n    border-radius: 4px;\n    padding: 3px 5px;\n\n    cursor: pointer;\n  }\n\n  .item.selected {\n    background: rgba(230, 230, 255);\n  }\n</style>\n\n<div class=\"search-container\">\n  <div\n    class=\"box search\"\n    in:fly={{ y: -5, duration: 150, delay: 0, opacity: 0.2, start: 0.0, easing: quintOut }}\n    out:fade={{ duration: 125, easing: quintOut }}>\n    {#each items as item, i}\n      <div\n        class=\"item\"\n        class:selected={i === selectedIndex}\n        on:click={() => handleClose(i)}\n        on:keydown={(event) => handleKeyDown(event, i)}\n        on:mousemove={() => handleMouseMove(i)}>\n        {@html item.label}\n      </div>\n    {/each}\n  </div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import Message from './Message.svelte'\n  import TextAheadOverlay from './TextAheadOverlay.svelte'\n  import debounce from '../lib/debounce'\n\n  export let id\n  export let value\n  export let placeholder = ''\n  export let inputRef = undefined\n  export let validate = () => true\n  export let disabled = false\n  export let invalidMessage = undefined\n  export let autocomplete = 'on'\n  export let invalid = false\n\n  export let items = undefined\n  export let minLength = 1\n  export let maxItems = 10\n\n  const dispatch = createEventDispatcher()\n\n  let changed = false\n  let overlayOpen = false\n  let selectedIndex = 0\n  let timer = null\n  let results = []\n\n  const setInvalid = debounce(() => (invalid = true), 1000)\n  $: changed = changed || (value !== '' && !changed)\n  $: if (!items) {\n    if (changed && !validate(value)) {\n      setInvalid()\n    } else {\n      setInvalid.cancel()\n      invalid = false\n    }\n  }\n\n  const regExpEscape = (s) => {\n    return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n\n  function handleBlur() {\n    timer = setTimeout(() => {\n      overlayOpen = false\n      invalid = changed && !validate(value)\n    }, 250)\n  }\n\n  function handleFocus() {\n    clearTimeout(timer)\n  }\n\n  const closeOverlay = (index = -1) => {\n    overlayOpen = false\n    selectedIndex = -1\n\n    if (index > -1) {\n      value = results[index].value\n    }\n  }\n\n  const handleChange = (event) => {\n    const term = event.target.value\n\n    if (term.length >= Number(minLength)) {\n      overlayOpen = true\n      filterResults(term)\n    } else {\n      results = []\n    }\n  }\n\n  const filterResults = (term) => {\n    results = items\n      .filter((item) => {\n        if (typeof item !== 'string') item = item.value || ''\n        return item.toUpperCase().includes(term.toUpperCase())\n      })\n      .map((item, i) => {\n        const text = typeof item !== 'string' ? item.value : item\n\n        return {\n          key: item.key || i,\n          value: text,\n          label:\n            term.trim() === ''\n              ? text\n              : text.replace(\n                  RegExp(regExpEscape(term.trim()), 'i'),\n                  \"<span style='font-weight: 600;'>$&</span>\"\n                ),\n        }\n      })\n      .slice(0, maxItems - 1)\n  }\n\n  function handleKeyDown(event) {\n    if (event.keyCode === 40 && selectedIndex < results.length - 1) {\n      selectedIndex += 1\n    } else if (event.keyCode === 38 && selectedIndex > 0) {\n      selectedIndex -= 1\n    } else if (event.keyCode === 13) {\n      event.preventDefault()\n\n      if (selectedIndex === -1) selectedIndex = 0\n      closeOverlay(selectedIndex)\n    } else if (event.keyCode === 27) {\n      event.preventDefault()\n      closeOverlay()\n    }\n  }\n\n</script>\n\n<style>\n  input {\n    width: 100%;\n    background-color: white;\n    border-color: #dbdbdb;\n    border-radius: 4px;\n    color: #363636;\n  }\n\n  input:disabled {\n    background-color: #f0f0f0;\n    color: #aaa;\n  }\n\n</style>\n\n<div>\n  <input\n    {id}\n    class=\"input\"\n    class:is-danger={invalid}\n    type=\"text\"\n    {disabled}\n    {placeholder}\n    autocomplete={items ? 'off' : autocomplete}\n    bind:value\n    bind:this={inputRef}\n    on:focus={() => items && handleFocus()}\n    on:blur={() => items && handleBlur()}\n    on:input={(event) => items && handleChange(event)}\n    on:keydown={(event) => items && handleKeyDown(event)} />\n\n  {#if items && overlayOpen && results.length > 0}\n    <TextAheadOverlay\n      items={results}\n      {selectedIndex}\n      on:close={(event) => closeOverlay(event.detail)}\n      on:select={(event) => (selectedIndex = event.detail)} />\n  {/if}\n\n  {#if invalidMessage && invalid}\n    <Message text={invalidMessage} error />\n  {/if}\n</div>\n",
    "<script>\n  import Modal from '../components/Modal.svelte'\n\n  let inputRef, formRef\n  let errorMessage = null\n  let title = ''\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  const errorMessages = {\n    bad_file_ext:\n      'The submitted file did not have the corresponding .cex file extension.',\n    bad_file_body: 'The submitted file could not be read.',\n    file_not_found: 'The submitted file could not be read.',\n    bad_cex_data:\n      'The CEX data contained erroneous data and could not be processed.',\n    null_title: 'Type the title!',\n    unknown:\n      'An unknown error occurred. This is not necessarily due to the uploaded CEX data. Please try again and log in again if necessary.',\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n\n    console.log('title', title.length)\n    if (title.length == 0) {\n      modalHeader = 'Failure'\n      modalText = errorMessages.null_title\n      showModal = true\n      return\n    }\n    const formData = new FormData()\n    formData.append('title', title)\n\n    let res\n    try {\n      res = await fetch('/api/v2/addcollection', {\n        method: 'POST',\n        body: formData,\n        redirect: 'error',\n        credentials: 'same-origin',\n      })\n    } catch (err) {\n      modalHeader = 'Failure'\n      modalText = errorMessages.unknown + '1'\n      showModal = true\n      return\n    }\n    const data = await res.json()\n    if (res.status !== 200) {\n      try {\n        if (typeof errorMessages[data.Message] != 'undefined') {\n          errorMessage = errorMessages[data.Message]\n        } else {\n          errorMessage = data.Message\n        }\n      } catch (err) {\n        modalHeader = 'Failure'\n        modalText = errorMessages.unknown + '3'\n        showModal = true\n        return\n      }\n    } else {\n      formRef.reset()\n    }\n\n    modalHeader = 'Success'\n    modalText = 'Collection added'\n    showModal = true\n    window.location.href = '/view/' + data.data + '/default'\n  }\n\n</script>\n\n<style>\n  .form-group {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .input-file {\n    display: none;\n  }\n\n  .custom-button {\n    background-color: #4caf50;\n    border: none;\n    color: white;\n    padding: 8px 16px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n  }\n\n  .modal {\n    display: block;\n  }\n\n  .spinner-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .spinner {\n    border: 4px solid rgba(0, 0, 0, 0.1);\n    width: 36px;\n    height: 36px;\n    border-radius: 50%;\n    border-left-color: #09f;\n    animation: spin 1s linear infinite;\n    margin-top: 10px; /* Add margin-left property */\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n</style>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-4 mx-auto \">\n      <form bind:this={formRef} on:submit={handleSubmit}>\n        <div class=\"form-group text-center\">\n          <h5>Add a new collection to Brucheion.</h5>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            bind:value={title} />\n        </div>\n        <div class=\"form-group text-left\">\n          <button\n            class=\"btn btn-primary is-success\"\n            type=\"submit\"\n            on:click={handleSubmit}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  import { afterUpdate } from 'svelte'\n  import BlockEditor from '../components/BlockEditor_self.svelte'\n\n  export let id_col\n\n  let err, collection, user, userrights, headerHeight, header, pane\n  let nonEmptyCollection = false\n\n  $: Promise.all([\n    getCollection(id_col),\n    getUser(),\n    getCollectionUserRights(id_col),\n  ])\n    .then(([c, u, ur]) => {\n      collection = c\n      user = u\n      userrights = ur\n    })\n    .catch((e) => (err = e))\n\n  async function getCollectionUserRights(id_col) {\n    const res = await fetch(`/api/v1/collectionuserrights/${id_col}`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n  async function getCollection(id_col) {\n    const res = await fetch(`/api/v1/collection/${id_col}`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function getUser() {\n    const res = await fetch(`/api/v1/user`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  $: if (collection && collection.buckets) {\n    collection.buckets.sort((a, b) =>\n      a.bucket.toLowerCase().localeCompare(b.bucket.toLowerCase())\n    )\n    collection.buckets.forEach((bucket) => {\n      bucket.citations.sort((a, b) => {\n        const aParts = a\n          .replace(/[-+/_|].*/, '')\n          .split('.')\n          .map(Number)\n        const bParts = b\n          .replace(/[-+/_|].*/, '')\n          .split('.')\n          .map(Number)\n\n        for (let i = 0; i < Math.min(aParts.length, bParts.length); i++) {\n          if (aParts[i] < bParts[i]) {\n            return -1\n          } else if (aParts[i] > bParts[i]) {\n            return 1\n          }\n        }\n\n        // If all parts compared are equal, sort by length\n        return aParts.length - bParts.length\n      })\n    })\n  }\n\n  $: if (collection && Array.isArray(collection.buckets)) {\n    nonEmptyCollection = true\n  }\n\n  afterUpdate(async () => {\n    // Get the height of the header element\n    header = document.querySelector('.header')\n    pane = document.querySelector('.pane')\n  })\n\n  $: headerHeight = header ? header.clientHeight : 0\n  // Set the padding-top for the pane element\n  $: if (pane) {\n    pane.style.paddingTop = `${headerHeight + 10}px`\n  }\n\n  let visibleEditorIndex = -1\n\n  function toggleEditor(index) {\n    if (visibleEditorIndex === index) {\n      visibleEditorIndex = -1 // Hide the BlockEditor if it's already visible\n    } else {\n      visibleEditorIndex = index // Show the BlockEditor\n    }\n  }\n\n  let showAllEditors = false\n\n  function toggleAllEditors() {\n    showAllEditors = !showAllEditors\n  }\n\n</script>\n\n<style>\n  .pane {\n    flex-basis: 50%;\n    flex-shrink: 0;\n    flex-grow: 1;\n    position: relative;\n    z-index: 10;\n    display: block;\n    padding-top: 0; /* Initialize padding to 0 */\n  }\n\n  .header {\n    display: flex;\n    position: fixed;\n    background: #ffffff;\n    width: 100%;\n    z-index: 999;\n  }\n\n  .toggle-button {\n    font-size: 1.2em; /* Adjust to the size you want */\n    padding: 5px 10px; /* Adjust to the padding you want */\n    /* Add more styles if needed, like colors, border, etc */\n  }\n\n</style>\n\n{#if err}\n  <h5>Error: You do not have permission to view this collection</h5>\n  <h6>\n    You can return to the\n    <a href=\"/\">Brucheion home page</a>\n    to see all available collections\n    <span>{err}</span>\n  </h6>\n{:else}\n  {#if !!collection}\n    <div class=\"header\">\n      <h2 style=\"margin-left: 10px\">{collection.title}</h2>\n      {#if nonEmptyCollection}\n        <button on:click={toggleAllEditors}>Toggle All Editors</button>\n      {/if}\n    </div>\n    <div class=\"pane\">\n      {#if nonEmptyCollection}\n        {#each collection.buckets as { bucket, citations }}\n          <div class=\"pane1\">\n            <a\n              href={`/view/${id_col}/${bucket}`}\n              target=\"_blank\"\n              rel=\"noreferrer\">\n              {bucket}\n            </a>\n            {#each citations as citation, i (citation)}\n              <div class=\"pane1\">\n                <button\n                  class=\"toggle-button\"\n                  on:click={() => toggleEditor(i)}>&gt;</button>\n                <a\n                  href={`/view/${id_col}/${bucket + citation}`}\n                  target=\"_blank\"\n                  rel=\"noreferrer\">\n                  {bucket.split(':')[bucket.split(':').length - 2]}:{citation}\n                </a>\n              </div>\n              {#if showAllEditors || visibleEditorIndex === i}\n                <div class=\"pane1\">\n                  <BlockEditor {id_col} {bucket} {citation} />\n                </div>\n              {/if}\n            {/each}\n          </div>\n        {/each}\n      {:else}\n        <p>No witness found.</p>\n      {/if}\n    </div>\n  {/if}\n{/if}\n",
    "<script>\n  import { onMount } from 'svelte'\n  import { Link, navigate } from 'svelte-routing' // export let urn\n  // export let userrights\n  import OpenSeadragon from '../lib/openseadragon/openseadragon'\n  import ResizeBarLandscape from '../components/ResizeBarLanscape.svelte'\n  import ResizeBarPortrait from '../components/ResizeBarPortrait.svelte'\n  import LineEditor from '../components/LineEditor.svelte'\n  import BlockEditor from '../components/BlockEditor.svelte'\n  import MetadataEditor from '../components/MetadataEditor.svelte'\n  import ImageEditor from '../components/ImageEditor.svelte'\n  import { validateUrn } from '../lib/cts-urn'\n  import { validateHttpUrl } from '../lib/url'\n  import { isIIIFImage } from '../lib/iiif'\n  import { getStaticOpts, getIIIFOpts, getInternalOpts } from '../lib/osd'\n\n  export let id_col, urn\n  let transcriptionFontSize = '1em'\n  let tFontSize = 1\n\n  let previewViewer = undefined,\n    viewerOpts = undefined,\n    previewVisible = false,\n    previewFailed = false,\n    selectedImageRef = undefined,\n    didMount = false,\n    selectedCatalogUrn, // = passage.catalog.urn,\n    showMetadata = false,\n    showImageEdit = false,\n    showReadingLine = false,\n    horizontalLine,\n    previewContainer = undefined,\n    previewHeight = 350,\n    previewWidth = 500,\n    err,\n    isPortrait = false,\n    newpassage,\n    lineIndex,\n    isLineEditor = false,\n    isBlockEditor = false,\n    transcriptionEditNav,\n    passagetext,\n    passage,\n    user,\n    userrights,\n    passageId,\n    currentTranscriptionLines = [],\n    prevTranscriptionLines,\n    newpassagetext,\n    loading = true,\n    savedata = false,\n    protocol = 'static',\n    images = [],\n    schemes = [],\n    imageURL,\n    retryCount = 3,\n    isFullyLoaded = false,\n    isErrorLoading = false,\n    hidePassageToolbar = false,\n    hideTranscriptionToolbar = false,\n    autoChangeOrientation = true,\n    newUrn,\n    sectionOpenSeaDragon,\n    sectionTranscription,\n    sectionOpenSeaDragonSize,\n    sectionTranscriptionSize\n\n  $: hidePassageToolbar =\n    isBlockEditor || isLineEditor || showMetadata || showImageEdit\n\n  $: hideTranscriptionToolbar = showMetadata || showImageEdit\n  //console.info('from components colid, passage: ', id_col, passage)\n  // $: if (!validateUrn(urn, { nid: 'cts' })) {\n  //   //  urn = 'urn:cts:sktlit:skt0001.nyaya002.M3D:5.1.1'\n  //   console.log('!!!', urn, validateUrn(urn, { nid: 'cts' }))\n  //   urn = 'undefined'\n  //   //  err = new Error('Passage not found')\n  // }\n  $: if (newUrn) {\n    navigate(`/view/${id_col}/${newUrn}`)\n  }\n\n  onMount(() => {\n    sectionOpenSeaDragon = document.getElementById('openseadragon_sec')\n    sectionTranscription = document.getElementById('transcription_sec')\n\n    //await loadData();\n    didMount = true\n    previewWidth = window.innerWidth / 2 - 6\n\n    function updateFolioid() {\n      const params = new URLSearchParams(window.location.search)\n      const folioid = params.get('folioid')\n      if (folioid) {\n        // If a folioid exists in the query string, use it as the selected image ref\n        selectedImageRef = folioid\n      } else if (passage && passage.imageRefs && passage.imageRefs.length > 0) {\n        // Otherwise, if there are image references, use the first one\n        selectedImageRef = passage.imageRefs[0]\n      } else {\n        // If no image references exist, set selectedImageRef to null or some default value\n        selectedImageRef = null\n      }\n    }\n\n    // Update folioid when the component mounts\n    updateFolioid()\n\n    // And whenever the URL changes\n    window.addEventListener('popstate', updateFolioid)\n\n    return () => {\n      // Clean up the event listener when the component is unmounted\n      window.removeEventListener('popstate', updateFolioid)\n    }\n  })\n\n  $: Promise.all([\n    getPassage(id_col, urn),\n    getUser(),\n    getCollectionUserRights(id_col),\n    getImages(id_col),\n  ])\n    .then(([p, u, ur, ci]) => {\n      passage = p\n      user = u\n      userrights = ur\n      passageId = p.passageid.split(':').pop()\n      selectedCatalogUrn = p.catalog.urn\n      if (p.transcriptionLines) {\n        currentTranscriptionLines = [...p.transcriptionLines]\n      }\n      if (p.schemes) {\n        schemes = [...p.schemes]\n      }\n      images = [...ci]\n      loading = false\n    })\n    .catch((e) => (err = e))\n\n  async function getCollectionUserRights(id_col) {\n    const res = await fetch(`/api/v1/collectionuserrights/${id_col}`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n  async function getPassage(id_col, urn) {\n    loading = true\n    const res = await fetch(`/api/v1/passage/${id_col}/${urn}`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function getImages(id_col) {\n    loading = true\n    const res = await fetch(`/api/v1/collectionimages/${id_col}`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function getUser() {\n    const res = await fetch(`/api/v1/user`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function displayExternalMedia(imageUrl) {\n    // console.log('displayExternalMedia', imageUrl)\n    try {\n      const [isManifest, imageManifest] = await isIIIFImage(imageUrl)\n      if (isManifest) {\n        viewerOpts = getIIIFOpts('preview', imageManifest)\n        protocol = 'iiif'\n      } else {\n        viewerOpts = getStaticOpts('preview', imageUrl)\n        protocol = 'static'\n      }\n    } catch (err) {\n      if (!err.message.includes('NetworkError')) {\n        console.error(err.message)\n      }\n\n      viewerOpts = getStaticOpts('preview', imageUrl)\n      protocol = 'static'\n    }\n  }\n\n  // FIXME: this is a pretty naive attempt to catch the passage ID\n  $: if (!!passage) {\n    passageId = passage.passageid.split(':').pop()\n  }\n\n  /* this should update the folio viewer a) once after mounting and b) when `passage` changes due to reactivity.\n   * this is just a lazy trick to trigger the viewer update in coordination with svelte's reactivity */\n  $: if (!!passage && didMount) {\n    updateViewer(passage.imageRefs)\n  }\n\n  $: validSource = validateUrn(selectedImageRef) || validateHttpUrl(imageURL)\n\n  $: if (validSource) {\n    previewFailed = false\n    // console.log('imageURL', imageURL)\n\n    if (validateHttpUrl(imageURL)) {\n      // console.log('displayExternalMedia', imageURL, validateHttpUrl(imageURL))\n      displayExternalMedia(imageURL)\n    } else if (validateUrn(selectedImageRef)) {\n      //   console.log('validateUrn(selectedImageRef)', validateUrn(selectedImageRef), selectedImageRef)\n      viewerOpts = getInternalOpts('preview', selectedImageRef)\n      protocol = 'localDZ'\n      viewerOpts.defaultZoomLevel = 1\n    }\n  }\n\n  $: if (validSource && viewerOpts) {\n    if (previewViewer) {\n      previewVisible = false\n      previewViewer.destroy()\n    }\n    createViewer(viewerOpts)\n  }\n\n  function handleImageUrlChange(event) {\n    //console.log('handleImageUrlChange imageURLiii:')\n    selectedImageRef = event.detail.imageURL\n    getimageURLfromCollection()\n    //console.log('handleImageUrlChange imageURL:', selectedImageRef)\n    // Update the OpenSeadragon viewer with the new imageURL\n  }\n\n  function createViewer(opts) {\n    opts.defaultZoomLevel = 1\n    opts.preserveImageSizeOnResize = true\n    opts.visibilityRatio = 1\n    opts.constrainDuringPan = true\n\n    const { tileSources, ...otherOpts } = opts\n    document.getElementById('osd_buttons').innerHTML = ''\n    previewViewer = OpenSeadragon(otherOpts)\n    previewViewer.open(tileSources)\n    createLine()\n    previewViewer.addHandler('open-failed', (e) => {\n      if (retryCount > 0) {\n        retryCount--\n        previewVisible = false\n        previewViewer.destroy()\n        previewFailed = true\n        viewerOpts = getInternalOpts('preview', selectedImageRef)\n        createViewer(opts)\n        //updateViewer(passage.imageRefs)\n      } else {\n        isErrorLoading = true\n        isFullyLoaded = false\n        updateLoadingIndicator()\n        previewVisible = false\n        previewViewer.destroy()\n        previewFailed = true\n      }\n    })\n\n    previewViewer.addHandler('open', (e) => {\n      isFullyLoaded = false\n      isErrorLoading = false\n      updateLoadingIndicator()\n      var x = previewViewer.source.dimensions.x\n      var y = previewViewer.source.dimensions.y\n      if (y >= x && autoChangeOrientation) {\n        isPortrait = true\n      } else {\n        isPortrait = false\n      }\n      previewVisible = true\n    })\n\n    previewViewer.world.addHandler('add-item', function (event) {\n      var tiledImage = event.item\n      tiledImage.addHandler('fully-loaded-change', function () {\n        var newFullyLoaded = areAllFullyLoaded()\n        if (newFullyLoaded !== isFullyLoaded) {\n          isFullyLoaded = newFullyLoaded\n          updateLoadingIndicator()\n        }\n      })\n    })\n\n    previewViewer.open(tileSources)\n    handleToggleLine()\n    handleToggleLine()\n  }\n\n  function areAllFullyLoaded() {\n    var tiledImage\n    var count = previewViewer.world.getItemCount()\n    for (var i = 0; i < count; i++) {\n      tiledImage = previewViewer.world.getItemAt(i)\n      if (!tiledImage.getFullyLoaded()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  function updateLoadingIndicator() {\n    if (!document.querySelector('.loading')) {\n      return\n    }\n    if (!isFullyLoaded && !isErrorLoading) {\n      document.querySelector('.loading').style.display = 'flex'\n      document.querySelector('.loading').textContent = 'Loading image...'\n    } else if (isFullyLoaded || !isErrorLoading) {\n      document.querySelector('.loading').style.display = 'none'\n    } else if (isErrorLoading) {\n      document.querySelector('.loading').style.display = 'flex'\n      document.querySelector('.loading').textContent = 'Error loading image...'\n    } else if (!isFullyLoaded) {\n      document.querySelector('.loading').style.display = 'flex'\n      document.querySelector('.loading').textContent = 'Loading image...'\n    }\n  }\n\n  function getimageURLfromCollection() {\n    // if selectedImageRef is in images.imagename array\n    // get this images element from images array\n    imageURL = undefined\n    for (const element of images) {\n      // console.log('Element:', element, selectedImageRef);\n      if (element.imagename === selectedImageRef) {\n        imageURL = element.location\n        break\n      }\n      imageURL = selectedImageRef\n    }\n  }\n\n  function updateViewer(refs) {\n    if (previewViewer) {\n      previewViewer.destroy()\n    }\n    //  console.log('viewerOpts', viewerOpts)\n    if (Array.isArray(refs) && refs.length > 0) {\n      if (!selectedImageRef || !refs.includes(selectedImageRef)) {\n        selectedImageRef = refs[0]\n      }\n      // console.log('before getImageFromCollection', viewerOpts)\n      getimageURLfromCollection()\n    }\n  }\n\n  function handleSelect(event) {\n    newUrn = selectedCatalogUrn + event.target.value\n  }\n\n  function handleWitnessSelection() {\n    newUrn = selectedCatalogUrn\n  }\n\n  function handleFirstPassage() {\n    newUrn = passage.firstPassage\n  }\n  function handlePreviousPassage() {\n    newUrn = passage.previousPassage\n  }\n  function handleNextPassage() {\n    if (passage.nextPassage !== '') {\n      newUrn = passage.nextPassage\n    }\n  }\n  function handleLastPassage() {\n    if (passage.lastPassage !== '') {\n      newUrn = passage.lastPassage\n    }\n  }\n\n  function handleFolioSelection() {\n    navigate(`/view/${id_col}/${newUrn}?folioid=${selectedImageRef}`)\n  }\n\n  function handleToggleMetadata() {\n    showMetadata = !showMetadata\n  }\n  function handleHideMetadata() {\n    showMetadata = false\n  }\n\n  function handleToggleLine() {\n    showReadingLine = !showReadingLine\n    if (showReadingLine) {\n      document.getElementById('lineOpts').style.display = 'flex'\n\n      horizontalLine.style.display = 'block'\n      updateLinePosition()\n      return\n    }\n\n    document.getElementById('lineOpts').style.display = 'none'\n    horizontalLine.style.display = 'none'\n  }\n\n  function createLine() {\n    horizontalLine = document.createElement('div')\n    horizontalLine.id = 'hline'\n    horizontalLine.style.position = 'absolute'\n    horizontalLine.style.width = '100%'\n    horizontalLine.style.height = '3px'\n    horizontalLine.style.backgroundColor = 'red'\n    horizontalLine.style.pointerEvents = 'none'\n    horizontalLine.style.display = 'none'\n    previewViewer.canvas.appendChild(horizontalLine)\n  }\n\n  function updateLinePosition() {\n    const viewportOrigin = previewViewer.viewport.pixelFromPoint(\n      previewViewer.viewport.getHomeBounds().getTopLeft()\n    )\n    const viewportY = previewViewer.viewport.getCenter(true).y\n    var lineY = previewViewer.viewport.viewportToViewerElementCoordinates(\n      new OpenSeadragon.Point(0, viewportY)\n    ).y\n\n    lineY +=\n      (parseFloat(document.getElementById('lineOffsetRange').value) * lineY) /\n      100\n\n    //horizontalLine.style.top = `${lineY - viewportOrigin.y}px`;\n    horizontalLine.style.top = `${lineY}px`\n\n    // add colorPicker\n    horizontalLine.style.backgroundColor =\n      document.getElementById('myColorPicker').value\n    localStorage.setItem(\n      'linecolor',\n      document.getElementById('myColorPicker').value\n    )\n  }\n\n  function handleToggleImageEdit() {\n    showImageEdit = !showImageEdit\n    autoChangeOrientation = false\n  }\n  function handleHideImageEdit() {\n    showImageEdit = false\n    autoChangeOrientation = true\n  }\n\n  function handleResize(e) {\n    console.log(e.detail)\n    if (isPortrait) {\n      previewWidth = e.detail.x - previewContainer.offsetLeft\n    } else {\n      previewHeight = e.detail.y - previewContainer.offsetTop\n    }\n  }\n\n  function resizeUp() {\n    sectionOpenSeaDragonSize = null\n    sectionTranscriptionSize = null\n  }\n\n  function resizeDown() {\n    var osd = window.getComputedStyle(sectionOpenSeaDragon)\n    sectionOpenSeaDragonSize = {\n      width: parseFloat(osd.width),\n      height: parseFloat(osd.height),\n    }\n    var trans = window.getComputedStyle(sectionTranscription)\n    sectionTranscriptionSize = {\n      width: parseFloat(trans.width),\n      height: parseFloat(trans.height),\n    }\n  }\n\n  function resizeMove(e) {\n    if (sectionTranscriptionSize && sectionOpenSeaDragonSize) {\n      if (isPortrait) {\n        sectionOpenSeaDragon.style.width =\n          sectionOpenSeaDragonSize.width + e.detail.x + 'px'\n        sectionTranscription.style.width =\n          sectionTranscriptionSize.width - e.detail.x + 'px'\n      } else {\n        sectionOpenSeaDragon.style.height =\n          sectionOpenSeaDragonSize.height + e.detail.y + 'px'\n        sectionTranscription.style.height =\n          sectionTranscriptionSize.height - e.detail.y + 'px'\n      }\n    }\n  }\n\n  function handleUpdateNewPassageText(event) {\n    newpassagetext = event.detail\n  }\n\n  function handleBlockEditorClick() {\n    isBlockEditor = !isBlockEditor\n    passagetext = passage.transcriptionLines.join('\\r\\n')\n  }\n\n  function handleLineEditorClick() {\n    isLineEditor = !isLineEditor\n\n    newpassage = passage\n    prevTranscriptionLines = [...passage.transcriptionLines]\n    currentTranscriptionLines = [...passage.transcriptionLines]\n    lineIndex = 0\n    const spans = document.querySelectorAll(\n      '.transcription  span[contenteditable]'\n    )\n\n    spans.forEach((span) => {\n      span.addEventListener('keydown', (event) => {\n        if (event.key === 'Enter') {\n          event.returnValue = false\n        }\n      })\n      span.addEventListener('input', (event) => {\n        const index = event.target.getAttribute('data-index')\n        const newText = event.target.textContent\n        currentTranscriptionLines[index] = newText\n      })\n      span.addEventListener('click', (event) => {\n        const selectedLine = event.target.closest('[data-index]')\n        if (selectedLine) {\n          lineIndex = selectedLine.getAttribute('data-index')\n          console.log('Selected line index:', lineIndex)\n          transcriptionEditNav = true\n        }\n      })\n    })\n  }\n\n  function handleTranscriptionEditorCancel() {\n    if (isBlockEditor) {\n      isBlockEditor = false\n    }\n    if (isLineEditor) {\n      isLineEditor = false\n      currentTranscriptionLines = [...prevTranscriptionLines]\n    }\n    //location.reload(true)\n  }\n\n  function handleTranscriptionEditorSave() {\n    if (isBlockEditor) {\n      SaveBlockEditorTrancription()\n    }\n    if (isLineEditor) {\n      SaveLineEditorTrancription()\n    }\n    //location.reload(true)\n  }\n\n  async function SaveLineEditorTrancription() {\n    // passage.transcriptionlines = currentTranscriptionLines.map(\n    //   (obj) => obj.line\n    // )\n    // passagetext = passage.transcriptionLines.join('\\r\\n')\n    newpassage.transcriptionlines = [...currentTranscriptionLines]\n    await fetch('/api/v2/savepassage', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newpassage),\n    }).then((res) => {\n      window.location.href = `/view/${id_col}/${passage.passageid}`\n    })\n  }\n\n  async function SaveBlockEditorTrancription() {\n    if (newpassagetext == undefined) {\n      console.log('newpassagetext empty')\n      return\n    }\n    let data = {\n      colid: passage.colid,\n      passageid: passage.passageid,\n      text: newpassagetext,\n    }\n\n    console.log('SaveBlockEditorTrancription data', data)\n\n    document.body.style.cursor = 'wait'\n    try {\n      const response = await fetch('/api/v2/savepassagetext', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      })\n      // If the fetch operation is successful, reload the page\n      if (response.ok) {\n        window.location.href = `/view/${id_col}/${passage.passageid}`\n      } else {\n        console.error('Failed to save data:', response)\n      }\n    } catch (error) {\n      console.error('Error during fetch:', error)\n    } finally {\n      // Restore the cursor to its default style\n      document.body.style.cursor = 'default'\n    }\n  }\n\n  function setTranscriptionFontSize() {\n    //var elem = document.getElementById(\"transcription\")\n    //elem.style.fontSize = transcriptionFontSize+\"em\"\n    transcriptionFontSize = tFontSize + 'em'\n  }\n\n  function fontDown() {\n    if (tFontSize > 0.5) {\n      tFontSize -= 0.1\n    }\n    setTranscriptionFontSize()\n  }\n\n  function fontReset() {\n    tFontSize = 1\n    setTranscriptionFontSize()\n  }\n\n  function fontUp() {\n    if (tFontSize < 1.5) {\n      tFontSize += 0.1\n    }\n    setTranscriptionFontSize()\n  }\n\n</script>\n\n<style>\n  #app {\n    height: 100%;\n    display: flex;\n    overflow: hidden;\n  }\n\n  :global(.ffull) {\n    display: flex;\n    flex-direction: column;\n    height: 100vh; /* This ensures that the container is exactly the size of the viewport */\n    overflow: scroll;\n    align-items: stretch;\n  }\n\n  :global(.fbody) {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n\n  :global(.fnavbar) {\n  }\n\n  :global(.fmain-content) {\n    flex-grow: 1; /* Takes up remaining space */\n    overflow: scroll;\n  }\n\n  :global(.ffooter) {\n    position: static;\n  }\n\n  .transcriptionBtn {\n    border: none;\n    background-color: lightblue;\n    color: #0077be;\n    font-weight: bold;\n    padding: 0;\n    width: 35px;\n    height: 35px;\n  }\n  .transcriptionBtn:focus {\n    outline: none;\n  }\n\n  body,\n  .vertical-split.portrait {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n  .wait-cursor {\n    cursor: wait;\n  }\n  :global(.toolbar) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    height: 40px;\n    overflow: scroll;\n    margin: 0;\n    border-top: 1px solid var(--toolbar-border-color);\n    border-bottom: 1px solid var(--toolbar-border-color);\n    padding: 0;\n\n    list-style: none;\n    background: var(--toolbar-bg-color, white);\n    /*border-top: 1px solid black;*/\n    /*border-bottom: 1px solid black;*/\n  }\n\n  #osd_toolbar {\n    height: 34px;\n    width: 100%;\n    background: var(--toolbar-bg-color, white);\n    /*border-bottom: 1px solid black;*/\n  }\n\n  #osd_buttons {\n    width: 100%;\n  }\n\n  :global(.toolbar, .toolbar select) {\n    font: 400 14px/100% 'Inter', sans-serif;\n    color: var(--toolbar-text-color, black);\n  }\n\n  :global(.toolbar.stacked-below) {\n    border-top: 0;\n  }\n\n  :global(.toolbar li) {\n    flex-shrink: 0;\n    margin: 0;\n    padding: 2px 6px;\n  }\n\n  /* join left */\n  :global(.toolbar li.jl) {\n    margin-left: 2px;\n  }\n  /* space left */\n  :global(.toolbar li.pl) {\n    margin-left: 6px;\n  }\n  /* border left */\n  :global(.toolbar li.bl) {\n    border-left: 1px solid var(--toolbar-border-color);\n  }\n  /* fill left */\n  :global(.toolbar li.fl) {\n    margin-left: auto;\n  }\n\n  :global(.toolbar li:last-child) {\n    border-right: 0;\n  }\n\n  :global(.toolbar li label) {\n    margin: 0;\n    padding: 0;\n\n    font-weight: 600;\n    font-size: inherit;\n  }\n\n  :global(.toolbar li code) {\n    font: 14px/100% 'IBM Plex Mono', monospace;\n    font-weight: bold;\n    color: inherit;\n  }\n\n  :global(.pane) {\n    flex-basis: 10%;\n    flex-shrink: 0;\n    flex-grow: 1;\n  }\n\n  :global(.pane.static) {\n    flex-grow: 0;\n  }\n\n  :global(.pane.grow) {\n    display: flex;\n    flex-direction: column;\n  }\n\n  :global(.pane.vertical-split.portrait) {\n    border-left: 1px solid var(--toolbar-border-color);\n    border-top: 0;\n    flex-direction: column;\n  }\n  :global(.vertical-split) {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    width: 100%;\n  }\n\n  :global(.vertical-split .pane) {\n    border-left: 1px solid var(--toolbar-border-color);\n  }\n  :global(.vertical-split .pane:first-child) {\n    border-left: 0;\n  }\n\n  :global(.preview) {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 0;\n    flex-shrink: 0;\n\n    box-sizing: border-box;\n    padding: 4px;\n\n    background: var(--pane-bg-color);\n    width: var(--width, 100%);\n  }\n\n  :global(.openseadragon-container) {\n    flex-grow: 1;\n  }\n\n  :global(.transcription) {\n    box-sizing: border-box;\n    padding: 16px;\n  }\n\n  :global(.metadata) {\n    font: 14px/130% 'Inter', sans-serif;\n    background: white;\n  }\n\n  :global(.metadata dl dt) {\n    padding: 8px 16px 4px;\n  }\n\n  .metadata dl dd {\n    padding: 0px 16px 8px;\n  }\n\n  :global(\n      .metadata dl dt:nth-child(4n + 1),\n      .metadata dl dt:nth-child(4n + 1) + dd\n    ) {\n    background: var(--pane-bg-color);\n  }\n\n  :global(.close-pane) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n\n  :global(.close-pane:hover) {\n    text-decoration: none;\n  }\n  :global(button) {\n    background-color: #0077be;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  :global(button.is-landscape) {\n    /* Styles for landscape layout */\n  }\n\n  :global(button.is-portrait) {\n    /* Styles for portrait layout */\n  }\n\n  .btn {\n    min-width: 120px;\n  }\n\n  .btn_cancel {\n    background: #ababab;\n  }\n  .btn_cancel:hover {\n    background: #dadada;\n    color: #ffffff;\n  }\n\n  .btn_cancel:active {\n    background: #616161;\n    color: #ffffff;\n  }\n\n  .shadow * {\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);\n    pointer-events: none;\n    cursor: not-allowed;\n    opacity: 0.8;\n  }\n\n  .openseadragon .dijitToolbar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n  }\n\n  .flex {\n    display: flex;\n  }\n\n  .frow {\n    flex-direction: row;\n  }\n\n  .fcol {\n    flex-direction: column;\n  }\n\n  .fgrow {\n    flex-grow: 1;\n  }\n  :global(.scroll) {\n    overflow: scroll;\n  }\n\n  :global(.pheight) {\n    height: 100%;\n  }\n\n  .sectionh {\n    height: 40vh;\n  }\n\n  .sectionw {\n    width: 50vw;\n    height: 80vh;\n  }\n  .transh {\n    height: 85%;\n  }\n\n  .transw {\n    width: 100%;\n    height: 92%;\n  }\n\n  .openseadragon .dijitToolbar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n  }\n\n</style>\n\n<div class=\"flex fcol pheight scroll\" class:wait-cursor={loading}>\n  {#if err}\n    <h5>Error: You do not have permission to view this collection</h5>\n    <h6>\n      You can return to the\n      <a href=\"/\">Brucheion home page</a>\n      to see all available collections\n      <span>{err}</span>\n    </h6>\n  {:else}\n    <nav class=\"flex\" class:shadow={hidePassageToolbar}>\n      <ul class=\"toolbar\" style=\"width: 100vw\">\n        <li><label for=\"passage.passageid\">Witness:</label></li>\n        <li class=\"pl\">\n          <div class=\"select\">\n            <select\n              bind:value={selectedCatalogUrn}\n              on:change={handleWitnessSelection}>\n              {#if passage && passage.textRefs}\n                {#each passage.textRefs as ref}\n                  <option value={ref}>{ref}</option>\n                {/each}\n              {:else}\n                <option disabled>No witnesses</option>\n              {/if}\n            </select>\n          </div>\n        </li>\n\n        <li class=\"pl\">\n          <a href=\"#top\" on:click|preventDefault={handleFirstPassage}>&lt</a>\n        </li>\n        <li class=\"pl\">\n          <a href=\"#top\" on:click|preventDefault={handlePreviousPassage}>←</a>\n        </li>\n        <!-- <li class=\"jl\"><code>{passageId}</code></li> -->\n        <select on:change={handleSelect} bind:value={passageId}>\n          {#if passage && passage.schemes}\n            {#each schemes as schema (schema)}\n              <option value={schema}>{schema}</option>\n            {/each}\n          {:else}\n            <option disabled>No schemes</option>\n          {/if}\n        </select>\n        <li class=\"pl\">\n          <a href=\"#top\" on:click|preventDefault={handleNextPassage}>→</a>\n        </li>\n        <li class=\"pl\">\n          <a href=\"#top\" on:click|preventDefault={handleLastPassage}>&gt</a>\n        </li>\n\n        <li><label for=\"passage.passageid\">Folio:</label></li>\n        <li>\n          <div class=\"select\">\n            <select\n              bind:value={selectedImageRef}\n              on:change={handleFolioSelection}>\n              {#if passage && passage.imageRefs}\n                {#each passage.imageRefs as ref}\n                  <option value={ref}>{ref}</option>\n                {/each}\n              {:else}\n                <option disabled>No image references</option>\n              {/if}\n            </select>\n          </div>\n        </li>\n        <li class=\"pl\">\n          <a href=\"#top\" on:click|preventDefault={handleToggleMetadata}>\n            {#if showMetadata}Hide{:else}Show{/if}\n            Metadata\n          </a>\n        </li>\n        {#if userrights && userrights.canEditMetadata}\n          <li class=\"pl\">\n            <a href=\"#top\" on:click|preventDefault={handleToggleImageEdit}>\n              {#if showImageEdit}Hide{:else}Show{/if}\n              Image References\n            </a>\n          </li>\n        {/if}\n      </ul>\n    </nav>\n\n    <div\n      class={`${isPortrait ? 'flex frow' : 'flex fcol'}`}\n      style=\"width: 100%\">\n      <section\n        id=\"openseadragon_sec\"\n        class={`flex  fcol ${isPortrait ? ' sectionw' : ' sectionh'}`}>\n        <div id=\"osd_toolbar\" class=\"flex frow\">\n          <div id=\"osd_buttons\" class=\"flex frow\" />\n          <div class=\"fgrow\" />\n          <div\n            id=\"lineOpts\"\n            class=\"flex frow\"\n            style=\"padding-top: 3px; padding-right: 7px; display: none\">\n            <input\n              type=\"range\"\n              min=\"-100\"\n              max=\"100\"\n              value=\"0\"\n              id=\"lineOffsetRange\"\n              style=\"width: 200px\"\n              on:input={updateLinePosition} />\n            <div style=\"padding-right: 5px\" />\n            <input\n              type=\"color\"\n              id=\"myColorPicker\"\n              on:input={updateLinePosition}\n              value={localStorage.getItem('linecolor') === null ? '#FF0000' : localStorage.getItem('linecolor')} />\n          </div>\n          <a\n            href=\"#top\"\n            on:click|preventDefault={handleToggleLine}\n            style=\"text-align: right; padding-right:3px; padding-top: 3px; white-space: nowrap\">\n            {#if showReadingLine}Disable{:else}Enable{/if}\n            Reading Line\n          </a>\n        </div>\n        <div\n          class=\"loading\"\n          style=\"position:absolute; left: 10px; top: 40px; font-size: 16px;\n          z-index: 10;\">\n          Loading image...\n        </div>\n        <div\n          class=\"preview openseadragon fgrow\"\n          bind:this={previewContainer}\n          id=\"preview\" />\n      </section>\n\n      {#if !isPortrait}\n        <ResizeBarLandscape\n          on:up={resizeUp}\n          on:down={resizeDown}\n          on:move={resizeMove} />\n      {:else}\n        <ResizeBarPortrait\n          on:up={resizeUp}\n          on:down={resizeDown}\n          on:move={resizeMove} />\n      {/if}\n\n      <section\n        id=\"transcription_sec\"\n        class={`flex scroll ${isPortrait ? ' sectionw' : ' sectionh'}`}>\n        <div class={`flex vertical-split${isPortrait ? ' portrait' : ''}`}>\n          <div class=\"pane pheight\">\n            <ul class=\"toolbar\" class:shadow={hideTranscriptionToolbar}>\n              <li>\n                <label\n                  for=\"passage.passageid\"\n                  style=\"font-size: large\">Transcription</label>\n              </li>\n              <li>\n                <button\n                  on:click={fontDown}\n                  type=\"button\"\n                  class=\"transcriptionBtn\"\n                  style=\"font-size: large\">A&#711</button>\n                <button\n                  on:click={fontReset}\n                  type=\"button\"\n                  class=\"transcriptionBtn\"\n                  style=\"font-size: large\">A</button>\n                <button\n                  on:click={fontUp}\n                  type=\"button\"\n                  class=\"transcriptionBtn\"\n                  style=\"font-size: large\">A&#710</button>\n              </li>\n              <li />\n              {#if userrights && userrights.canEditTranscription}\n                {#if !(isBlockEditor || isLineEditor)}\n                  <li>\n                    <button\n                      type=\"button\"\n                      class=\"\"\n                      on:click={handleLineEditorClick}\n                      disabled={isBlockEditor && !isLineEditor}>\n                      Line Editor\n                    </button>\n                  </li>\n\n                  <li>\n                    <button\n                      type=\"button\"\n                      class=\"\"\n                      on:click={handleBlockEditorClick}\n                      disabled={!isBlockEditor && isLineEditor}>\n                      Block Editor\n                    </button>\n                  </li>\n                {/if}\n                {#if isBlockEditor || isLineEditor}\n                  <li>\n                    <button\n                      type=\"button\"\n                      class=\"btn_save\"\n                      on:click={handleTranscriptionEditorSave}>\n                      Save\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      type=\"button\"\n                      class=\"btn_cancel\"\n                      on:click={handleTranscriptionEditorCancel}>\n                      Cancel\n                    </button>\n                  </li>\n                {/if}\n\n                <!-- <li>\n                <a\n                  href={`/tools/edittranscription/${id_col}/${passage.passageid}`}>\n                  Legacy Editor\n                </a>\n              </li> -->\n              {/if}\n            </ul>\n            <div class=\"scroll transh ${isPortrait ? ' transw' : ''}\">\n              {#if isBlockEditor}\n                <BlockEditor\n                  {passagetext}\n                  {newpassagetext}\n                  {transcriptionFontSize}\n                  on:update={handleUpdateNewPassageText} />\n              {:else}\n                <LineEditor\n                  {lineIndex}\n                  {transcriptionEditNav}\n                  {currentTranscriptionLines}\n                  {isLineEditor}\n                  {transcriptionFontSize} />\n              {/if}\n            </div>\n          </div>\n          {#if showMetadata}\n            <div class=\"pane\">\n              <ul class=\"toolbar\" style=\"display: flex;\">\n                <li><label for=\"metadata\">Metadata</label></li>\n                <span style=\"flex-grow: 1;\" />\n                {#if userrights && userrights.canEditMetadata}\n                  <button on:click={() => (savedata = true)}>save</button>\n                {/if}\n                <li class=\"fl\">\n                  <a\n                    href=\"#top\"\n                    class=\"close-pane\"\n                    on:click|preventDefault={handleHideMetadata}>\n                    ×\n                  </a>\n                </li>\n              </ul>\n              <div class=\"metadata\">\n                <MetadataEditor\n                  {passage}\n                  {savedata}\n                  canEditMetadata={userrights.canEditMetadata} />\n              </div>\n            </div>\n          {/if}\n          {#if showImageEdit}\n            <div class=\"pane\">\n              <ul class=\"toolbar\" style=\"display: flex;\">\n                <li><label for=\"imageeditor\">Image Editor</label></li>\n                <span style=\"flex-grow: 1;\" />\n                {#if userrights && userrights.canEditMetadata}\n                  <button on:click={() => (savedata = true)}>save</button>\n                {/if}\n                <li class=\"fl\">\n                  <a\n                    href=\"#top\"\n                    class=\"close-pane\"\n                    on:click|preventDefault={handleHideImageEdit}>\n                    ×\n                  </a>\n                </li>\n              </ul>\n              <div class=\"imageeditor\">\n                <ImageEditor\n                  {passage}\n                  colID={id_col}\n                  {savedata}\n                  on:imageurlchange={handleImageUrlChange} />\n              </div>\n            </div>\n          {/if}\n        </div>\n      </section>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import Modal from '../components/Modal.svelte'\n\n  let inputRef, formRef\n  let cexFile = ''\n  let complete = false\n  let loading = false\n  let title = ''\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  const errorMessages = {\n    bad_file_ext:\n      'The submitted file did not have the corresponding .cex file extension.',\n    bad_file_body: 'The submitted file could not be read.',\n    file_not_found: 'The submitted file could not be read.',\n    bad_cex_data:\n      'The CEX data contained erroneous data and could not be processed.',\n    null_title: 'Type the title!',\n    unknown:\n      'An unknown error occurred. This is not necessarily due to the uploaded CEX data. Please try again and log in again if necessary.',\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    if (!complete) {\n      return\n    }\n\n    if (inputRef.files.length < 1) {\n      modalHeader = 'Failure'\n      modalText = errorMessages.file_not_found\n      showModal = true\n      return\n    }\n    //console.log('title', title.length)\n    if (title.length == 0) {\n      loading = false\n      modalHeader = 'Failure'\n      modalText = errorMessages.null_title\n      showModal = true\n      return\n    }\n    const file = inputRef.files[0]\n    const formData = new FormData()\n    formData.append('title', title)\n    formData.append('files', file)\n\n    let res\n    loading = true\n    try {\n      res = await fetch('/api/v2/cexupload', {\n        method: 'POST',\n        body: formData,\n        redirect: 'error',\n        credentials: 'same-origin',\n      })\n    } catch (err) {\n      loading = false\n      modalHeader = 'Failure'\n      modalText = '1.' + errorMessages.unknown\n      showModal = true\n      return\n    }\n    loading = false\n\n    const data = await res.json()\n    if (res.status !== 200) {\n      try {\n        if (typeof errorMessages[data.message] != 'undefined') {\n          modalText = errorMessages[data.message]\n        } else {\n          modalHeader = 'Warning'\n          modalText = data.message\n        }\n        showModal = true\n        return\n      } catch (err) {\n        modalHeader = 'Failure'\n        modalText = '3.' + errorMessages.unknown\n        showModal = true\n        return\n      }\n    } else {\n      //  console.log('!!!!!!!!!!!!!!!!!!!!data', data)\n      formRef.reset()\n    }\n    // const data = await res.json()\n    // console.log('data', data.message)\n    modalText = data.message\n    modalHeader = 'Success'\n    showModal = true\n    window.location.href = '/view/' + data.data + '/default'\n  }\n\n  $: complete = !!cexFile\n\n  function onButtonClick() {\n    inputRef.addEventListener('change', (event) => {\n      const file = event.target.files[0]\n      if (file) {\n        const fileName = getFileName(file.name)\n        cexFile = fileName\n      }\n    })\n\n    inputRef.click()\n  }\n\n  function getFileName(fullPath) {\n    var startIndex =\n      fullPath.indexOf('\\\\') >= 0\n        ? fullPath.lastIndexOf('\\\\')\n        : fullPath.lastIndexOf('/')\n    var filename = fullPath.substring(startIndex)\n    if (filename.indexOf('\\\\') === 0 || filename.indexOf('/') === 0) {\n      filename = filename.substring(1)\n    }\n    return filename\n  }\n\n</script>\n\n<style>\n  .form-group {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .input-file {\n    display: none;\n  }\n\n  .custom-button {\n    background-color: #4caf50;\n    border: none;\n    color: white;\n    padding: 8px 16px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n  }\n\n  .modal {\n    display: block;\n  }\n\n  .spinner-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .spinner {\n    border: 4px solid rgba(0, 0, 0, 0.1);\n    width: 36px;\n    height: 36px;\n    border-radius: 50%;\n    border-left-color: #09f;\n    animation: spin 1s linear infinite;\n    margin-top: 10px; /* Add margin-left property */\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n</style>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-4 mx-auto \">\n      <form bind:this={formRef} on:submit={handleSubmit}>\n        <div class=\"form-group text-center\">\n          <h5>Add a new collection (CEX file) to Brucheion.</h5>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"title\"\n            bind:value={title} />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"cex-file\">CEX-File:</label>\n          <input\n            id=\"cex-file\"\n            type=\"file\"\n            accept=\".cex\"\n            class=\"input-file\"\n            bind:value={cexFile}\n            bind:this={inputRef} />\n          <h6>{cexFile}</h6>\n          <button class=\"custom-button\" on:click={onButtonClick}>Browse</button>\n        </div>\n        <div class=\"form-group text-left\">\n          <button\n            class=\"btn btn-primary is-success\"\n            type=\"submit\"\n            class:is-loading={loading}\n            disabled={!complete || loading}\n            on:click={handleSubmit}>\n            Submit\n          </button>\n          {#if loading}\n            <div class=\"spinner-container\">\n              <div class=\"spinner\" />\n            </div>\n          {/if}\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  // import { stringify as stringifyQuery } from 'qs'\n  import OpenSeadragon from '../lib/openseadragon/openseadragon'\n  import { onMount } from 'svelte'\n  import { navigate } from 'svelte-routing'\n  import FormLine from '../components/FormLine.svelte'\n  import Message from '../components/Message.svelte'\n  import { validateUrn, validateNoColon } from '../lib/cts-urn'\n  import TextInput from '../components/TextInput.svelte'\n  import { validateHttpUrl } from '../lib/url'\n  import { isIIIFImage } from '../lib/iiif'\n  import { getStaticOpts, getIIIFOpts, getInternalOpts } from '../lib/osd'\n  import Modal from '../components/Modal.svelte'\n  import {\n    listDZIFiles,\n    s3_bucket_url_js,\n    listDZIcollection,\n  } from '../lib/s3helper.js'\n\n  export let id_col\n\n  let collection = ''\n  let imageName = ''\n  let imageUrl = ''\n  let external = true\n  let protocol = 'static'\n\n  let statusMessage = null,\n    timeoutHandle = null\n  let collectionRef, imageNameRef\n  let collections = []\n  let nameExists = false\n  let previewViewer = undefined,\n    viewerOpts = undefined,\n    previewVisible = false,\n    previewErrored = false\n\n  let colinfo,\n    colimages = [],\n    err = 'Loading information about the collection...'\n\n  let showModal = false,\n    modalHeader,\n    modalText\n\n  let namespace = '',\n    namespaces = [],\n    collectionID = '',\n    collectionIDs = [],\n    imageID = ''\n\n  $: imageName = 'urn:cite2:' + namespace + ':' + collectionID + ':' + imageID\n  $: collection = 'urn:cite2:' + namespace + ':' + collectionID + ':'\n  $: validNames =\n    validateUrn(collection, { noPassage: true }) && validateUrn(imageName)\n  $: validSource = validateUrn(imageUrl) || validateHttpUrl(imageUrl)\n  $: complete = validNames && validSource\n\n  $: if (statusMessage !== null) {\n    clearTimeout(timeoutHandle)\n    timeoutHandle = setTimeout(() => (statusMessage = null), 10000)\n  }\n  $: errorMessage =\n    statusMessage && statusMessage.toLowerCase().includes('error')\n  $: external = !validateUrn(imageUrl)\n  $: if (validNames) {\n    // fetch(`/api/v2/imageinfo/${id_col}/${collection}/${imageName}`).then(\n    //   async (res) => {\n    //     const imageInfo = await res.json()\n    //     nameExists = !!imageInfo.data.imagename\n    //   }\n    // )\n    nameExists = !!collections.imagename\n  } else if (nameExists) {\n    nameExists = false\n  }\n\n  $: if (validSource) {\n    previewErrored = false\n\n    if (validateHttpUrl(imageUrl)) {\n      displayExternalMedia(imageUrl)\n    } else if (validateUrn(imageUrl)) {\n      viewerOpts = getInternalOpts('preview', imageUrl)\n      protocol = 'localDZ'\n    }\n  }\n\n  $: if (!!collections) {\n    colimages = collections.map((entry) => entry.colname)\n\n    namespaces = collections.map((entry) => {\n      let urnParts = entry.colname.split(':')\n      if (urnParts.length >= 3) {\n        return urnParts[2]\n      } else {\n        return null // or any other default value, or you can exclude it\n      }\n    })\n\n    collectionIDs = collections.map((entry) => {\n      let urnParts = entry.colname.split(':')\n      if (urnParts.length >= 4) {\n        return urnParts[3]\n      } else {\n        return null // or any other default value, or you can exclude it\n      }\n    })\n  }\n\n  onMount(async () => {\n    const query = new URLSearchParams(location.search)\n    if (query.has('collection')) {\n      if (validateUrn(query.get('collection'), { noPassage: true })) {\n        collection = query.get('collection')\n        imageNameRef.focus()\n      } else {\n        query.delete('collection')\n        navigate(`/ingest?${query.toString()}`, { replace: true })\n      }\n    } else {\n      // collectionRef.focus()\n    }\n    await fetchCollectionImages()\n    await fetchCollectionInfo()\n    //await getDZIcollection()\n  })\n\n  async function displayExternalMedia(imageUrl) {\n    try {\n      const [isManifest, imageManifest] = await isIIIFImage(imageUrl)\n      if (isManifest) {\n        viewerOpts = getIIIFOpts('preview', imageManifest)\n        protocol = 'iiif'\n      } else {\n        viewerOpts = getStaticOpts('preview', imageUrl)\n        protocol = 'static'\n      }\n    } catch (err) {\n      if (!err.message.includes('NetworkError')) {\n        console.error(err.message)\n      }\n\n      viewerOpts = getStaticOpts('preview', imageUrl)\n      protocol = 'static'\n    }\n  }\n\n  async function getDZIcollection() {\n    const bucketName = 'brucheion'\n    const prefix = 'nbh/J1img/positive/'\n    // const prefix = '';\n    const dziCollection = await listDZIcollection(bucketName, prefix)\n    console.log('List of DZI files with folder paths and names:', dziCollection)\n  }\n\n  function createViewer(opts) {\n    const { tileSources, ...otherOpts } = opts\n    previewViewer = OpenSeadragon(otherOpts)\n\n    previewViewer.addHandler('open-failed', () => {\n      previewVisible = false\n      previewViewer.destroy()\n      previewErrored = true\n    })\n\n    previewViewer.addHandler('open', () => {\n      previewVisible = true\n    })\n\n    previewViewer.open(tileSources)\n  }\n\n  /* We'll need to trick the Svelte reactivity here, since destroying a prior viewer before creating a new one will result\n   * in a circular dependency within the $-statement. Hence, above we just create the viewer options and handle viewer\n   * lifecycles in the below $-statement.\n   */\n  $: if (validSource && viewerOpts) {\n    if (previewViewer) {\n      previewVisible = false\n      previewViewer.destroy()\n    }\n\n    createViewer(viewerOpts)\n  }\n\n  // ready\n  async function fetchCollectionImages() {\n    const res = await fetch(`/api/v1/collectionimages/${id_col}`)\n    if (res.ok) {\n      collections = (await res.json()).data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function fetchCollectionInfo() {\n    const res = await fetch(`/api/v1/collection/${id_col}`)\n    if (res.ok) {\n      colinfo = (await res.json()).data\n      //  console.log('colinfo', colinfo)\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    if (!complete) {\n      return\n    }\n\n    let query = {\n      colid: parseInt(id_col),\n      imagename: imageName,\n      colname: collection,\n      protocol: protocol,\n      license: 'CC-BY-4.0',\n      external: external,\n      location: imageUrl,\n    }\n\n    const res = await fetch('/api/v2/addimagetocite', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(query),\n    })\n\n    if (res.ok) {\n      modalHeader = 'Success'\n      modalText = 'The image has been saved to the image collection'\n      showModal = true\n      // showMetadata = false\n    } else {\n      // Handle error\n      console.error(`Ingestion failed: HTTP ${res.status} ${await res.text()}`)\n      modalHeader = 'Error'\n      modalText = 'An error occurred. Please try later.'\n      showModal = true\n      return\n    }\n  }\n\n</script>\n\n<style>\n  .form-column {\n    max-width: 724px;\n  }\n\n  .form {\n    box-sizing: border-box;\n    max-width: 700px;\n    padding: 25px;\n  }\n\n  select {\n    background-color: white;\n    border-color: #dbdbdb;\n    border-radius: 4px;\n    color: #363636;\n  }\n\n  .preview-container {\n    margin-top: 25px;\n    padding: 25px;\n    opacity: 0;\n\n    transition: opacity 125ms ease-out;\n  }\n\n  .preview-container.visible {\n    opacity: 1;\n  }\n\n  @media screen and (min-width: 1088px) {\n    .preview-container {\n      margin-top: 0;\n    }\n  }\n\n  .preview {\n    box-sizing: border-box;\n    max-width: 701px;\n    height: 601px;\n    border: 2px solid rgba(230, 230, 230);\n    border-radius: 4px;\n    padding: 4px;\n\n    background: rgba(246, 245, 245);\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\n  }\n\n</style>\n\n<div class=\"container is-fluid\">\n  <section>\n    <div class=\"columns is-desktop\">\n      <div class=\"column form-column\">\n        <form class=\"form\" on:submit={handleSubmit}>\n          {#if colinfo}\n            <h3 style=\"width: 90%;\">\n              Define Identifier for \"{colinfo.title}\" collection\n            </h3>\n          {:else if err}\n            <h5>{err}</h5>\n          {/if}\n\n          <FormLine\n            id=\"URN_prefix\"\n            label=\"Image name in URN format\"\n            info=\"Like `urn:cite2:nbh:J1img.positive:J1_31r`. Fill all bottom filelds to take result!\">\n            <TextInput id=\"URN_prefix\" bind:value={imageName} disabled=\"true\" />\n          </FormLine>\n\n          <FormLine\n            id=\"namespace\"\n            label=\"Namespace\"\n            info=\"Name of your image collection\">\n            <TextInput\n              id=\"namespace\"\n              placeholder=\"Select or enter namespace\"\n              bind:value={namespace}\n              validate={(value) => validateNoColon(value)}\n              items={namespaces}\n              invalidMessage=\"Please enter a valid namespace without COLON(:).\" />\n          </FormLine>\n\n          <FormLine\n            id=\"collection\"\n            label=\"Collection ID and/or Object Type\"\n            info=\"Like `nyaya.positive`\">\n            <TextInput\n              id=\"collection\"\n              placeholder=\"Select or enter collection ID and/or object type\"\n              bind:value={collectionID}\n              validate={(value) => validateNoColon(value)}\n              items={collectionIDs}\n              invalidMessage=\"Please enter a value without COLON(:).\" />\n          </FormLine>\n\n          <FormLine\n            id=\"image_id\"\n            label=\"Image Identifier\"\n            info=\"Image number in collection. Like `J1D_35`\">\n            <TextInput\n              id=\"image_id\"\n              placeholder=\"Enter image identifier\"\n              bind:value={imageID}\n              validate={(value) => validateNoColon(value)}\n              invalidMessage=\"Please enter a valid image identifier without COLON(:).\" />\n          </FormLine>\n\n          <FormLine\n            id=\"source\"\n            label=\"Source\"\n            info=\"Link to external source like `https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png`\">\n            <TextInput\n              id=\"source\"\n              placeholder=\"Resource URL\"\n              bind:value={imageUrl}\n              validate={(value) => validateUrn(value) || validateHttpUrl(value)}\n              invalidMessage=\"Please enter a valid CITE object URN or a HTTP(S)\n              URL.\" />\n            {#if previewErrored}\n              <Message\n                text=\"The media could not be loaded for preview due to errors.\n                You can ingest it nonetheless.\" />\n            {/if}\n          </FormLine>\n\n          <FormLine\n            id=\"protocol\"\n            label=\"Type\"\n            info=\"Usually defined automatically when Source defined\">\n            <div class=\"select\">\n              <select id=\"protocol\" bind:value={protocol}>\n                <option value=\"static\">Static</option>\n                <!-- <option value=\"localDZ\">Deep Zoom (local)</option> -->\n                <option value=\"iiif\">IIIF</option>\n              </select>\n            </div>\n          </FormLine>\n\n          <FormLine offset>\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              disabled={!complete}\n              on:click={handleSubmit}>\n              Add Image\n            </button>\n            {#if statusMessage}\n              <Message text={statusMessage} error={errorMessage} />\n            {/if}\n          </FormLine>\n        </form>\n      </div>\n      <div class=\"column form-column\">\n        <div class=\"preview-container\" class:visible={previewVisible}>\n          <h3 class=\"title is-4\">Preview</h3>\n          <div id=\"preview\" class=\"preview\" />\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n\n{#if showModal}\n  <Modal bind:showModal>\n    <h3 slot=\"header\">{modalHeader}</h3>\n\n    <body>\n      <h4>{modalText}</h4>\n    </body>\n  </Modal>\n{/if}\n",
    "<script>\n  import Objects from '../components/Objects.svelte'\n  import jQuery from 'jquery'\n  export let id_col\n\n  // console.info('from routes share collections colid: ', id_col)\n\n  async function getShareCollection(id_col) {\n    const res = await fetch(`/api/v2/sharecollection/${id_col}`)\n    if (res.ok) {\n      const d = await res.json()\n      console.log(d)\n      return d\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  async function getUser() {\n    const res = await fetch(`/api/v2/users/0`)\n    if (res.ok) {\n      const d = await res.json()\n      return d.data\n    } else {\n      throw new Error(res.body)\n    }\n  }\n\n  let results = []\n  let possibleResults = []\n  let peopleWithAccess = []\n  let access = false\n  let readOnly = false\n  let makePublic = false\n\n  let searchInput = {\n    user_name: '',\n  }\n  let isFocused = false\n  const onFocus = () => (isFocused = true)\n  const onBlur = () => (isFocused = false)\n  let collection, colUsers, err\n  ;(async () => {\n    const result = Promise.all([getShareCollection(id_col), getUser()])\n      .then(([c, u]) => {\n        collection = c.collection\n        colUsers = c.colusers\n        possibleResults = u\n        makePublic = collection.is_public\n      })\n      .catch((e) => (err = e))\n\n    await result\n    console.log('!!!', colUsers)\n    var cU = (colUsers ?? []).map((x) => x.user_id)\n    peopleWithAccess = possibleResults.filter((x) => cU.includes(x.user_id))\n    //mix colusers with user\n    peopleWithAccess = peopleWithAccess.map((person) => {\n      const colUser = colUsers.find((x) => x.user_id === person.user_id)\n      if (colUser) {\n        return { ...person, ...colUser }\n      }\n      return person\n    })\n  })()\n\n  const typeahead = () => {\n    let resultsIncludes = possibleResults.filter((possibleResults) =>\n      possibleResults.user_name\n        .toLowerCase()\n        .includes(searchInput.user_name.toLowerCase())\n    )\n    let resultsStartWith = possibleResults.filter((possibleResults) =>\n      possibleResults.user_name\n        .toLowerCase()\n        .startsWith(searchInput.user_name.toLowerCase())\n    )\n    results = resultsStartWith.sort().concat(resultsIncludes.sort())\n    results = [...new Set(results)]\n  }\n\n  const newSearchInput = (oneResult) => {\n    searchInput = oneResult\n  }\n\n  function handleDeleteColUser(userid) {\n    let data = {\n      colid: collection.id,\n      userid: userid,\n    }\n    fetch('/api/v2/collectionsuser', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    }).then((res) => {\n      // console.log('Request complete! response:', res)\n      location.reload(true)\n    })\n  }\n\n  function handleSubmit() {\n    makePublic = !makePublic\n\n    collection.is_public = makePublic\n\n    let selUser = {\n      col_id: collection.id,\n      user_id: searchInput.user_id,\n      is_write: access,\n    }\n\n    colUsers = (colUsers ?? []).concat(selUser)\n\n    let data = {\n      collection: collection,\n      colusers: colUsers,\n    }\n\n    // console.log(data)\n\n    fetch('/api/v2/sharecollection', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    }).then((res) => {\n      // console.log('Request complete! response:', res)\n      location.reload(true)\n    })\n  }\n\n</script>\n\n<style>\n  .typeahead {\n    position: relative;\n  }\n  .ip {\n    margin-bottom: 0;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n  .ip:hover {\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 4px 8px, rgba(0, 0, 0, 0.23) 0px 4px 8px;\n  }\n  input[type='text'].ip {\n    width: 60%;\n    display: block;\n    text-align: center;\n    border: 3px solid black;\n    border-radius: 0;\n    margin-right: auto;\n    transition: width 0.4s ease-in-out;\n  }\n  input[type='text'].ip:focus {\n    background-color: whitesmoke;\n    outline: none;\n    width: 60%;\n  }\n  .ulist {\n    max-height: 215px;\n    overflow: auto;\n  }\n\n  .ulist.typeahead-object-list {\n    position: absolute;\n    padding: 0;\n    margin-top: 0;\n    width: 60%;\n    z-index: 99;\n    margin-right: auto;\n    background-color: whitesmoke;\n  }\n\n</style>\n\n<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Share Collection</li>\n  </ol>\n</nav>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-5 mx-auto\">\n      <div>\n        <img\n          src=\"/files/img/CollectionImg.svg\"\n          class=\"img-thumbnail\"\n          alt=\"Profile\" />\n      </div>\n      <br />\n      <div class=\"row\">\n        {#if collection && !err}\n          <h3 style=\"width: 90%;\">Share collection \"{collection.title}\"</h3>\n        {:else if err}\n          <h5>Error: {err}</h5>\n        {/if}\n\n        {#if makePublic}\n          <button\n            class=\"tag tag-public mb-2 mx-right\"\n            id=\"tag-text\"\n            type=\"submit\"\n            on:click={handleSubmit}>\n            PUBLIC\n          </button>\n        {:else}\n          <button\n            class=\"tag tag-private mb-2 mx-right\"\n            id=\"tag-text\"\n            type=\"submit\"\n            on:click={handleSubmit}>\n            PRIVATE\n          </button>\n        {/if}\n      </div>\n      <br />\n\n      <!-- <label>\n        <input\n          type=\"checkbox\"\n          name=\"Make Public\"\n          disabled={access}\n          bind:checked={makePublic} />\n        Make Public\n      </label> -->\n      <br />\n\n      <h4>Select users to give access to:</h4>\n      <div class=\"typeahead row\">\n        <input\n          id=\"searchfield\"\n          type=\"text\"\n          name=\"searchfield\"\n          placeholder=\"Search\"\n          class=\"ip\"\n          value={searchInput.user_name}\n          on:input={typeahead}\n          on:focus={onFocus}\n          on:blur={onBlur}\n          style=\"width: 40%;\" />\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"full access\"\n            disabled={readOnly}\n            bind:checked={access} />\n          Full Access\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"read only\"\n            disabled={access}\n            bind:checked={readOnly} />\n          Read Only\n        </label>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          disabled={!((access || readOnly) && searchInput != '')}\n          on:click={handleSubmit}>\n          Submit\n        </button>\n      </div>\n      <ul class=\"ulist typeahead-object-list\">\n        {#if isFocused === true}\n          {#if searchInput.length === 0}\n            {#each possibleResults as oneResult}\n              <Objects\n                object={oneResult.user_name}\n                on:mousedown={() => newSearchInput(oneResult)} />\n            {/each}\n          {:else}\n            {#each results as oneResult}\n              <Objects\n                object={oneResult.user_name}\n                on:mousedown={() => newSearchInput(oneResult)} />\n            {/each}\n          {/if}\n        {/if}\n      </ul>\n      <br />\n      <br />\n      <div>\n        {#if colUsers && !err}\n          <h4>People with access</h4>\n          <div class=\"row\">\n            {#each peopleWithAccess as pWA}\n              <span style=\"width: 20%;\">{pWA.user_name}</span>\n              <span style=\"width: 50%;\">{pWA.user_email}</span>\n              {#if pWA.is_write}\n                <span style=\"width: 20%;\">READ/WRITE</span>\n              {:else}<span style=\"width: 20%;\">READ ONLY</span>{/if}\n              <button\n                type=\"submit\"\n                class=\"btn btn-primary\"\n                on:click={() => handleDeleteColUser(pWA.user_id)}>\n                DEL\n              </button>\n            {/each}\n          </div>\n        {:else if err}\n          <h5>Error: {err}</h5>\n        {/if}\n      </div>\n    </div>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAuBE,yBAAW,CACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,UACd,CAEA,uBAAS,CACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UACd;ACuEA,QAAQ,sBAAS,CACf,MAAM,CAAE,QACV,CAEA,sBAAS,CACP,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GACT;AC3GA,sBAAQ,CACN,UAAU,CAAE,IACd,CAEA,6BAAe,CACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,UACf,CAEA,0BAAY,CACV,YAAY,CAAE,IAChB,CAEA,CAAC,UAAU,gBAAC,MAAM,MAAO,CACvB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC9B,UAAU,CAAE,OACd,CACA,CAAC,UAAU,gBAAC,MAAO,CACjB,OAAO,CAAE,KAAK,UAAU,CAAC,CACzB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,CACnB,kBAAkB,CAAE,GAAG,CACvB,qBAAqB,CAAE,GAAG,CAC1B,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACjC,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACpC,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAC5B,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE;AACtB,MAAM,MAAM,CAAC;AACb,MAAM,IAAI,CAAC,GAAG,CAAC;AACf,MAAM,IAAI,CAAC,MAAM,CAAC;AAClB,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC7B,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5B,KAAK,CACD,gBAAgB,CAAE,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAChE,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC5D,gBAAgB,CAAE,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC3D,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MACd,CACA,CAAC,UAAU,gBAAE,CACX,QAAQ,CAAE,QACZ;AC0GA,wCAAa,CACX,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,IACd,CACA,mBAAK,CAAC,gBAAG,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CACV,CAGA,iCAAM,CACJ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,WAAW,CAAE,OAAO,CAAC,CAAC,UAAU,CAChC,aAAa,CAAE,IACjB,CAEA,mBAAK,CAAC,gBAAG,CACP,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAC7B,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAC3B,CAGA,mBAAK,CAAC,EAAE,wBAAW,CACjB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,mBAAmB,CAAE,WAAW,CAChC,gBAAgB,CAAE,OACpB,CAEA,8BAAG,CACD,aAAa,CAAE,GACjB,CACA,uCAAY,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MACf,CAEA,0CAAe,CACb,WAAW,CAAE,IACf,CAKA,kCAAO,CACL,KAAK,CAAE,IACT;ACpIA,6BAAgB,CACd,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CACX,CAEA,0BAAa,CACX,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,YAAY,CACzB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,OACT,CAEA,0BAAY,MAAO,CACjB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,0BAAY,OAAQ,CAClB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,CAAC,kBAAK,CACJ,aAAa,CAAE,GAAG,CAAC,MAAM,CACzB,eAAe,CAAE,IACnB,CACA,CAAC,kBAAI,MAAO,CACV,MAAM,CAAE,YAAY,CACpB,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,IAAI,CAAC,EACnB,CAyBA,CAAC,UAAU,eAAC,MAAM,MAAO,CACvB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC9B,UAAU,CAAE,OACd,CACA,CAAC,UAAU,eAAC,MAAO,CACjB,OAAO,CAAE,KAAK,UAAU,CAAC,CACzB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,CACnB,kBAAkB,CAAE,GAAG,CACvB,qBAAqB,CAAE,GAAG,CAC1B,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACjC,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACpC,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAC5B,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE;AACtB,MAAM,MAAM,CAAC;AACb,MAAM,IAAI,CAAC,GAAG,CAAC;AACf,MAAM,IAAI,CAAC,MAAM,CAAC;AAClB,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC7B,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5B,KAAK,CACD,gBAAgB,CAAE,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAChE,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC5D,gBAAgB,CAAE,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC3D,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MACd,CACA,CAAC,UAAU,eAAE,CACX,QAAQ,CAAE,QACZ;ACpLA,gBAAG,CACD,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,GAAG,CAEZ,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GACf,CAEA,oBAAO,CACL,KAAK,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CACxB;AC2CA,CAAC,UAAU,gBAAC,MAAM,MAAO,CACvB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC9B,UAAU,CAAE,OACd,CACA,CAAC,UAAU,gBAAC,MAAO,CACjB,OAAO,CAAE,KAAK,UAAU,CAAC,CACzB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,CACnB,kBAAkB,CAAE,GAAG,CACvB,qBAAqB,CAAE,GAAG,CAC1B,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACjC,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CACpC,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAC5B,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE;AACtB,MAAM,MAAM,CAAC;AACb,MAAM,IAAI,CAAC,GAAG,CAAC;AACf,MAAM,IAAI,CAAC,MAAM,CAAC;AAClB,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AAC7B,MAAM,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5B,KAAK,CACD,gBAAgB,CAAE,wBAAwB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAChE,gBAAgB,CAAE,qBAAqB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC7D,gBAAgB,CAAE,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC5D,gBAAgB,CAAE,mBAAmB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAC3D,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MACd,CACA,CAAC,UAAU,gBAAE,CACX,QAAQ,CAAE,QACZ;AC1FA,oCAAO,CACL,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CACX,CACA,oCAAM,UAAW,CACf,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC/B,CACA,qBAAM,CAAG,kBAAI,CACX,OAAO,CAAE,GACX,CACA,MAAM,CAAC,IAAI,+BAAE,CACX,SAAS,CAAE,mBAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CACvD,CACA,WAAW,mBAAK,CACd,IAAK,CACH,SAAS,CAAE,MAAM,IAAI,CACvB,CACA,EAAG,CACD,SAAS,CAAE,MAAM,CAAC,CACpB,CACF,CACA,MAAM,CAAC,IAAI,+BAAC,UAAW,CACrB,SAAS,CAAE,mBAAI,CAAC,IAAI,CAAC,QACvB,CACA,WAAW,mBAAK,CACd,IAAK,CACH,OAAO,CAAE,CACX,CACA,EAAG,CACD,OAAO,CAAE,CACX,CACF,CACA,oCAAO,CACL,OAAO,CAAE,KACX,CACA,8CAAiB,CACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MACnB;AC/CA,EAAE,gCAAmB,CACnB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,KACX,CACA,EAAE,gCAAkB,MAAO,CACzB,gBAAgB,CAAE,SACpB;ACaA,gCAAK,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CAEvB,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAEZ,gBAAgB,CAAE,IAAI,kBAAkB,CAAC,CACzC,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CAAC,CACjD,MAAM,CAAE,SAAS,CACjB,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WACrC,CAEA,IAAI,mCAAQ,CACV,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,mCAAQ,CACN,WAAW,CAAE,CAAC,CACd,SAAS,CAAE,CAAC,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WACrC,CAEA,kBAAI,MAAM,CAAC,qBAAQ,CACjB,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/B,CAEA,qCAAU,CACR,MAAM,CAAE,SACV;ACpCA,kCAAK,CACH,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CAEvB,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAEZ,gBAAgB,CAAE,IAAI,kBAAkB,CAAC,CACzC,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CAAC,CAClD,MAAM,CAAE,SAAS,CACjB,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WACrC,CAEA,IAAI,qCAAQ,CACV,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CACrC,CAEA,qCAAQ,CACN,WAAW,CAAE,CAAC,CACd,SAAS,CAAE,CAAC,CACZ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WACrC,CAEA,mBAAI,MAAM,CAAC,sBAAQ,CACjB,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/B,CAEA,uCAAU,CACR,MAAM,CAAE,SACV;ACvCA,gCAAkB,CAChB,QAAQ,CAAE,QACZ,CAEA,sBAAQ,CACN,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,GAAG,CAAE,CAAC,CACN,OAAO,CAAE,EAAE,CAEX,OAAO,CAAE,GACX,CAEA,oBAAM,CACJ,UAAU,CAAE,UAAU,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAEhB,MAAM,CAAE,OACV,CAEA,KAAK,wBAAU,CACb,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAChC;ACkEA,mBAAM,CACJ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,KAAK,CACvB,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,OACT,CAEA,mBAAK,SAAU,CACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,IACT;ACnDA,0BAAY,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAClB,CAuCA,WAAW,mBAAK,CACd,IAAK,CACH,SAAS,CAAE,OAAO,MAAM,CAC1B,CACF;ACTA,mBAAM,CACJ,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,CAAC,CACd,SAAS,CAAE,CAAC,CACZ,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,CACf,CAEA,qBAAQ,CACN,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,KAAK,CACf,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GACX,CAEA,4BAAe,CACb,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CAAC,IAEf;ACigBQ,MAAQ,CACd,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,OACf,CAEQ,MAAQ,CACd,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,IACV,CAEQ,QAAU,CAClB,CAEQ,cAAgB,CACtB,SAAS,CAAE,CAAC,CACZ,QAAQ,CAAE,MACZ,CAEQ,QAAU,CAChB,QAAQ,CAAE,MACZ,CAEA,+CAAkB,CAChB,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,SAAS,CAC3B,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACV,CACA,+CAAiB,MAAO,CACtB,OAAO,CAAE,IACX,CAGA,eAAe,uCAAU,CACvB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IACV,CACA,0CAAa,CACX,MAAM,CAAE,IACV,CACQ,QAAU,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CAEnB,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CAAC,CACjD,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CAAC,CACpD,OAAO,CAAE,CAAC,CAEV,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IAAI,kBAAkB,CAAC,MAAM,CAG3C,CAEA,0CAAa,CACX,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,kBAAkB,CAAC,MAAM,CAE3C,CAEA,0CAAa,CACX,KAAK,CAAE,IACT,CAEQ,yBAA2B,CACjC,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CACvC,KAAK,CAAE,IAAI,oBAAoB,CAAC,MAAM,CACxC,CAEQ,sBAAwB,CAC9B,UAAU,CAAE,CACd,CAEQ,WAAa,CACnB,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,GAAG,CAAC,GACf,CAGQ,cAAgB,CACtB,WAAW,CAAE,GACf,CAEQ,cAAgB,CACtB,WAAW,CAAE,GACf,CAEQ,cAAgB,CACtB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CACnD,CAEQ,cAAgB,CACtB,WAAW,CAAE,IACf,CAEQ,sBAAwB,CAC9B,YAAY,CAAE,CAChB,CAEQ,iBAAmB,CACzB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CAEV,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,OACb,CAEQ,gBAAkB,CACxB,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAC1C,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,OACT,CAEQ,KAAO,CACb,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,CAAC,CACd,SAAS,CAAE,CACb,CAEQ,YAAc,CACpB,SAAS,CAAE,CACb,CAEQ,UAAY,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAClB,CAEQ,6BAA+B,CACrC,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CAAC,CAClD,UAAU,CAAE,CAAC,CACb,cAAc,CAAE,MAClB,CACQ,eAAiB,CACvB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACT,CAEQ,qBAAuB,CAC7B,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,sBAAsB,CACnD,CACQ,iCAAmC,CACzC,WAAW,CAAE,CACf,CAEQ,QAAU,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,CAAC,CACZ,WAAW,CAAE,CAAC,CAEd,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,GAAG,CAEZ,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,IAAI,OAAO,CAAC,KAAK,CAC1B,CAEQ,wBAA0B,CAChC,SAAS,CAAE,CACb,CAEQ,cAAgB,CACtB,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,IACX,CAEQ,SAAW,CACjB,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CACnC,UAAU,CAAE,KACd,CAEQ,eAAiB,CACvB,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,GACpB,CAMQ;AACV;AACA;AACA,IAAM,CACF,UAAU,CAAE,IAAI,eAAe,CACjC,CAEQ,WAAa,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GACf,CAEQ,iBAAmB,CACzB,eAAe,CAAE,IACnB,CACQ,MAAQ,CACd,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OACV,CAEQ,mBAAqB,CAE7B,CAEQ,kBAAoB,CAE5B,CAEA,kCAAK,CACH,SAAS,CAAE,KACb,CAEA,yCAAY,CACV,UAAU,CAAE,OACd,CACA,yCAAW,MAAO,CAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,yCAAW,OAAQ,CACjB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,sBAAO,CAAC,eAAE,CACR,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACvE,cAAc,CAAE,IAAI,CACpB,MAAM,CAAE,WAAW,CACnB,OAAO,CAAE,GACX,CAEA,6BAAc,CAAC,4BAAc,CAC3B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,YACnB,CAEA,mCAAM,CACJ,OAAO,CAAE,IACX,CAEA,mCAAM,CACJ,cAAc,CAAE,GAClB,CAEA,mCAAM,CACJ,cAAc,CAAE,MAClB,CAEA,oCAAO,CACL,SAAS,CAAE,CACb,CACQ,OAAS,CACf,QAAQ,CAAE,MACZ,CAEQ,QAAU,CAChB,MAAM,CAAE,IACV,CAEA,uCAAU,CACR,MAAM,CAAE,IACV,CAEA,uCAAU,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACV,CACA,qCAAQ,CACN,MAAM,CAAE,GACV,CAEA,qCAAQ,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GACV,CAEA,6BAAc,CAAC,4BAAc,CAC3B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,YACnB;AC3zBA,0BAAY,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAClB,CAEA,0BAAY,CACV,OAAO,CAAE,IACX,CAEA,6BAAe,CACb,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,GAAG,CACf,MAAM,CAAE,OACV,CAMA,iCAAmB,CACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MACf,CAEA,uBAAS,CACP,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,iBAAiB,CAAE,IAAI,CACvB,SAAS,CAAE,mBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAClC,UAAU,CAAE,IACd,CAEA,WAAW,mBAAK,CACd,IAAK,CACH,SAAS,CAAE,OAAO,MAAM,CAC1B,CACF;AC0EA,2BAAa,CACX,SAAS,CAAE,KACb,CAEA,oBAAM,CACJ,UAAU,CAAE,UAAU,CACtB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IACX,CAEA,qBAAO,CACL,gBAAgB,CAAE,KAAK,CACvB,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,OACT,CAEA,iCAAmB,CACjB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,CAAC,CAEV,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,QAC5B,CAEA,kBAAkB,uBAAS,CACzB,OAAO,CAAE,CACX,CAEA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAE,CACpC,iCAAmB,CACjB,UAAU,CAAE,CACd,CACF,CAEA,uBAAS,CACP,UAAU,CAAE,UAAU,CACtB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACrC,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,GAAG,CAEZ,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC/B,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC5C;AC9JA,wBAAW,CACT,QAAQ,CAAE,QACZ,CACA,iBAAI,CACF,aAAa,CAAE,CAAC,CAChB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAC3E,CACA,iBAAG,MAAO,CACR,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAC3E,CACA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAI,CACpB,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,CAAC,CAChB,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,KAAK,CAAC,IAAI,CAAC,WACzB,CACA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAG,MAAO,CAC1B,gBAAgB,CAAE,UAAU,CAC5B,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GACT,CACA,oBAAO,CACL,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,IACZ,CAEA,MAAM,oCAAuB,CAC3B,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,CAAC,CACb,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,EAAE,CACX,YAAY,CAAE,IAAI,CAClB,gBAAgB,CAAE,UACpB"
}